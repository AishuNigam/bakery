{"version":3,"file":"static/js/994.9d8cc4e0.chunk.js","mappings":"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","sources":["views/pages/errors/Error404.js","services/coupon.js","services/userList.js","views/components/Pagination.js","utils/Antd.js","views/pages/Coupon.js","services/application.js","utils/TinyMce.js","views/pages/Application.js","services/category.js","services/file.js","utils/UploadImage.js","views/pages/Category.js","services/banner.js","views/pages/Banner.js","services/variant.js","views/pages/Product/Varient.js","services/userMange.js","services/address.js","views/pages/Management/Address.js","services/product.js","views/pages/Management/Cart.js","services/wallet.js","views/pages/Management/WalletHistory.js","views/pages/Management/userManagement.js","services/specialization.js","views/pages/Product/Product.js","services/offer.js","views/pages/Offer.js","views/pages/Product/AddOn.js","services/homepageItems.js","views/pages/HomePageItems.js","services/orders.js","services/orderDetail.js","views/pages/OrderDetails.js","views/pages/Order.js","views/pages/Specialization/List.js","views/pages/Specialization/Type.js","services/delivery.js","views/pages/delivery.js","views/pages/Product/index.js","services/settings.js","views/pages/Settings.js","views/layout/Layout.js"],"sourcesContent":["import { Result, Button } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Error404() {\r\n    return (\r\n        <Result\r\n            status=\"404\"\r\n            title=\"404\"\r\n            subTitle=\"Sorry, the page you visited does not exist.\"\r\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\r\n        />\r\n    );\r\n}\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '';\r\n\r\n    static list(data) {\r\n        return axios.get(\"coupon/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(\"coupon/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post('coupon/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get('coupon/details/' + id);\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data) {\r\n        return axios.post(this.baseURL + \"/save-user\", data);\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n}","import { Pagination, Tag } from 'antd';\r\nexport default function MyPagination(props) {\r\n    const { qData, setQData } = props;\r\n\r\n    const handleChange = (page, pp) => {\r\n        if (qData.limit !== pp) {\r\n            setQData({ ...qData, page: 1, limit: pp });\r\n        } else {\r\n            setQData({ ...qData, page: page });\r\n        }\r\n    }\r\n\r\n    const showTotal = () => {\r\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\r\n        let end = qData.page * qData.limit;\r\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                qData.total > 0\r\n                    ? <Pagination\r\n                        total={qData.total}\r\n                        showTotal={showTotal}\r\n                        pageSize={qData.limit}\r\n                        current={qData.page}\r\n                        onChange={handleChange}\r\n                        showSizeChanger={true}\r\n                    />\r\n                    : null\r\n            }\r\n        </>\r\n    );\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState, forwardRef } from 'react';\r\nimport moment from 'moment';\r\nimport {\r\n    DatePicker,\r\n    Checkbox,\r\n    message,\r\n    Upload,\r\n    Modal,\r\n} from 'antd';\r\nimport { PlusOutlined } from '@ant-design/icons';\r\n\r\nexport function AntdDatepicker(props) {\r\n    let {\r\n        format,\r\n        getFormat = 'YYYY-MM-DD',\r\n        inputReadOnly,\r\n        value,\r\n        defaultValue,\r\n        onChange,\r\n        disablePastDate = false,\r\n        disableUpcomingDate = false,\r\n        ...rest\r\n    } = props;\r\n\r\n\r\n    let otherProps = {};\r\n    if (typeof value !== \"undefined\") {\r\n        otherProps.value = moment(new Date(value ? value : new Date()), format || 'DD MMM YYYY');\r\n    }\r\n    if (typeof defaultValue !== \"undefined\") {\r\n        otherProps.defaultValue = defaultValue ? moment(new Date(defaultValue)) : null\r\n    }\r\n    if (typeof onChange !== \"undefined\") {\r\n        otherProps.onChange = (dt) => {\r\n            onChange(dt ? moment(dt).format(getFormat) : null);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        onChange(moment(value).format(getFormat))\r\n    }, [])\r\n\r\n    return (\r\n        <DatePicker\r\n            format={format || 'DD MMM YYYY'}\r\n            inputReadOnly={inputReadOnly || true}\r\n            disabledDate={(current) => {\r\n                let customDate = moment().format(\"YYYY-MM-DD\");\r\n                if (disablePastDate) {\r\n                    return current && current < moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n                if (disableUpcomingDate) {\r\n                    return current && current > moment(customDate, \"YYYY-MM-DD\");\r\n                }\r\n            }}\r\n            {...otherProps}\r\n            {...rest}\r\n            style={{ width: '100%' }}\r\n        />\r\n    )\r\n}\r\n\r\nexport function MultiChechBox(props) {\r\n    const { col = 3 } = props;\r\n    const type = typeof props.value === 'object' ? 'array' : 'string';\r\n\r\n    let [values, setValues] = useState();\r\n    let [options, setOptions] = useState([]);\r\n\r\n    const handleChange = (e) => {\r\n        const val = typeof e.target.value * 1 !== 'NaN' ? e.target.value + '' : e.target.value * 1;\r\n        if (e.target.checked) {\r\n            values.push(val)\r\n            setValues([...values]);\r\n        } else {\r\n            if (values.indexOf(val) > -1) {\r\n                values.splice(values.indexOf(val), 1);\r\n                setValues([...values])\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (type === 'string') {\r\n            values = props.value ? props.value.split(',').map((v) => v * 1) : [];\r\n            setValues([...values]);\r\n        } else {\r\n            setValues([...props.value]);\r\n        }\r\n    }, [props.value]);\r\n\r\n    useEffect(() => {\r\n        let opts = props.options.map((v, i) => {\r\n            if (v.value) {\r\n                return { value: v.value * 1, label: v.label }\r\n            } else if (v.id) {\r\n                return { value: v.id * 1, label: v.name || v.title || v.label }\r\n            } else if (v._id) {\r\n                return { value: v._id + '', label: v.name || v.title || v.label }\r\n            }\r\n            return null;\r\n        });\r\n        setOptions(opts);\r\n    }, [props.options]);\r\n\r\n    useEffect(() => {\r\n        props.onChange(values)\r\n    }, [(values || []).join(\",\")])\r\n\r\n    return (\r\n        <div className=\"row mingap\" >\r\n            {\r\n                options.map((v, i) => (\r\n                    <div className={`col-md-${col} mb-2 form-group`} key={i}>\r\n                        <div className=\"border p-1\">\r\n                            <Checkbox\r\n                                value={typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1}\r\n                                checked={values?.includes(typeof v.value * 1 !== 'NaN' ? v.value + '' : v.value * 1)}\r\n                                onChange={handleChange}\r\n                                className=\"mx-0 mr15\"\r\n                            >\r\n                                {v.label}\r\n                            </Checkbox>\r\n                        </div>\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport function AntdMsg($msg, $type = 'success') {\r\n    if ($msg) {\r\n        if ($type === 'success')\r\n            message.success($msg);\r\n        if ($type === 'error')\r\n            message.error($msg);\r\n        if ($type === 'warning')\r\n            message.warning($msg);\r\n    }\r\n};\r\n\r\nfunction getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n}\r\n\r\nconst UploadImage = forwardRef((props, ref) => {\r\n    const { fileCount } = props;\r\n    const fileRef = ref;\r\n    let { files } = props;\r\n    useEffect(() => {\r\n        setFileList(files)\r\n    }, [files])\r\n\r\n    if (files.length) {\r\n        files = files?.map((v, i) => {\r\n            return { uid: i, url: v.url, status: 'done', name: v.name };\r\n        });\r\n    } else {\r\n        files = [];\r\n    }\r\n\r\n\r\n    const [fileList, setFileList] = useState(files);\r\n\r\n    const dummyRequest = ({ file, onSuccess }) => {\r\n        setTimeout(() => {\r\n            onSuccess(\"ok\");\r\n            if (!fileRef.current.uploadingFiles) {\r\n                fileRef.current.uploadingFiles = [];\r\n            }\r\n            fileRef.current.uploadingFiles?.push(file);\r\n        }, 0);\r\n    };\r\n    const [previewVisible, setPreviewVisible] = useState(false);\r\n    const [previewImage, setPreviewImage] = useState('');\r\n    const [previewTitle, setPreviewTitle] = useState('');\r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n\r\n    const handlePreview = async file => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n        setPreviewVisible(true);\r\n        setPreviewImage(file.url || file.preview);\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\r\n    };\r\n\r\n    const handleChange = ({ fileList: newFileList }) => {\r\n        setFileList(newFileList);\r\n    };\r\n\r\n    const uploadButton = (\r\n        <div>\r\n            <PlusOutlined />\r\n            <div style={{ marginTop: 8 }}>Upload</div>\r\n        </div>\r\n    );\r\n    return (\r\n        <>\r\n            <Upload\r\n                // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\r\n                listType=\"picture-card\"\r\n                customRequest={dummyRequest}\r\n                fileList={fileList}\r\n                onPreview={handlePreview}\r\n                onChange={(value) => {\r\n                    if (value.file.status === 'removed' || value.file.status) {\r\n                        handleChange(value)\r\n                    }\r\n                }}\r\n                beforeUpload={\r\n                    (file) => {\r\n                        if (!file.type.includes('image/')) {\r\n                            message.error('Invalid file type');\r\n                            return false\r\n                        }\r\n                    }\r\n                }\r\n                onRemove={(e) => {\r\n                    if (!fileRef.current.deletingFiles) {\r\n                        fileRef.current.deletingFiles = [];\r\n                    }\r\n                    if (!e.thumbUrl) {\r\n                        fileRef.current.deletingFiles?.push(e);\r\n                    } else {\r\n                        fileRef.current.uploadingFiles = fileRef.current.uploadingFiles.filter((v) => { return v.uid !== e.uid })\r\n                    }\r\n                }}\r\n            >\r\n                {fileList.length >= fileCount ? null : uploadButton}\r\n            </Upload>\r\n            <Modal\r\n                open={previewVisible}\r\n                title={previewTitle}\r\n                footer={null}\r\n                onCancel={handleCancel}\r\n            >\r\n                <img alt=\"example\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </>\r\n    );\r\n})\r\n\r\nexport default UploadImage;","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, DatePicker } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\n\r\nimport service from '../../services/coupon';\r\nimport UserService from '../../services/userList';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\nimport util from '../../utils/util';\r\n\r\nexport default function Coupon() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 30,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            // width: 150,\r\n            dataIndex: 'title',\r\n        },\r\n        {\r\n\t\t\ttitle: \"User\",\r\n\t\t\tdataIndex: \"userDetails\",\r\n\t\t\twidth: 250,\r\n\t\t\trender: v => v.map(vv => <Tag key={vv._id}>{vv.name || \"UNKNOWN\"}</Tag>)\r\n\t\t},\r\n        {\r\n            title: 'Code',\r\n            width: 100,\r\n            dataIndex: 'code',\r\n        },\r\n        {\r\n            title: 'EndDate',\r\n            width: 100,\r\n            dataIndex: 'expiryDate',\r\n            render: (v, row) => <span>{moment(v).format('DD MMM YYYY')}</span>\r\n        },\r\n        {\r\n\t\t\ttitle: \"Discount Value\",\r\n\t\t\tdataIndex: \"discountValue\",\r\n\t\t\twidth: 120,\r\n\t\t\trender: (v, row) => row.discountType === 'flat' ? <b>₹ {v}</b> : <b>{v} %</b>\r\n\t\t},\r\n        {\r\n            title: 'Coupon Use',\r\n            width: 100,\r\n            dataIndex: 'typeOfUse',\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 60,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listUser() {\r\n        UserService.listUser()\r\n            .then(res => { setUser(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    console.log(tableColumns)\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listUser()\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Coupon</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, user }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    const onChange = (v, key) => {\r\n\t\tqData[key] = v;\r\n\t\tif (v === undefined || v === \"\") {\r\n\t\t\tdelete qData[key];\r\n\t\t\tlist();\r\n\t\t}\r\n\t};\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item>\r\n                        <Select value={qData.status} allowClear placeholder=\"Search By Date\" onChange={e => onChange(e, \"expiryDate\")} >\r\n                            <Select.Option value=\"expired\">Expired</Select.Option>\r\n                            <Select.Option value=\"active\">Active</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, user } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ code: util.removeSpecialChars(data.title)?.toUpperCase() });\r\n        }\r\n    }, [data.title]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Coupon'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Code\" required>\r\n                                    <Input placeholder=\"Code\" value={data.code} onChange={e => { handleChange({ code: util.removeSpecialChars(e.target.value)?.toUpperCase() }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Discount Type\" required>\r\n                                    <Select value={data.discountType} onChange={e => { handleChange({ discountType: e }) }} >\r\n                                        <Select.Option value={'percent'}>Percent</Select.Option>\r\n                                        <Select.Option value={'flat'}>Flat</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Discount Value\" required>\r\n                                    <Input placeholder=\"discountValue\" value={data.discountValue} onChange={e => { handleChange({ discountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Max Discount Value\" required>\r\n                                    <Input placeholder=\"Max DiscountValue\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Minimun Order Value\" required>\r\n                                    <Input placeholder=\" Minimun Order Amount\" value={data.minimunOrderPrice} onChange={e => { handleChange({ minimunOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Use Type\" required>\r\n                                    <Select value={data.typeOfUse} onChange={e => { handleChange({ typeOfUse: e }) }} >\r\n                                        <Select.Option value=\"Single\">Single Use</Select.Option>\r\n                                        <Select.Option value=\"Multiple\">Multiple Use</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={18}>\r\n                                <Form.Item label=\"Choose Users (Don't choose any user if coupon is applicable to all users)\" >\r\n                                    <Select mode='multiple' value={data.userIds} onChange={v => { handleChange({ userIds: v }) }}\r\n                                        options={\r\n                                            user.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label:<>\r\n                                                    <p style={{ padding: \"0px\", margin: \"0px\" }}>{v?.name}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{v?.phone}</Typography.Text></p>\r\n                                                    </>,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Expiry Date\" required>\r\n                                    <DatePicker value={data.expiryDate && dayjs(moment(data.expiryDate).format(\"YYYY-MM-DD\"))}\r\n                                        format='DD MMM YYYY'\r\n                                        disabledDate={(current) => current.isBefore(moment(new Date()).subtract(1, \"day\"))}\r\n                                        onChange={(e) => { handleChange({ expiryDate: new Date(e) }) }} style={{ width: '100%' }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"For First Order\">\r\n                                    <Select value={data.forFirst} defaultValue={false} onChange={e => { handleChange({ forFirst: e }) }} >\r\n                                        <Select.Option value={true}>Yes</Select.Option>\r\n                                        <Select.Option value={false}>No</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'application';\r\n\r\n    static detail(data) {\r\n        console.log(\"service data: \",data)\r\n        return axios.get(this.baseURL + '/details/' + data.type);\r\n    }\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","import React, { useRef } from 'react';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\n\r\n\r\nexport default function TinyMce(props) {\r\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\r\n    if (!plugins) {\r\n        plugins = [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\r\n            'image paste table code'\r\n        ];\r\n    }\r\n    if (!toolbar) {\r\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\r\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\r\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\r\n    }\r\n    if (!content_style) {\r\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\r\n    }\r\n\r\n    const editorRef = useRef(null);\r\n    const editorContent = () => {\r\n        if (editorRef.current) {\r\n            onChange(editorRef.current.getContent())\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Editor\r\n                onInit={(evt, editor) => editorRef.current = editor}\r\n                {...{ initialValue }}\r\n                init={{\r\n                    height, menubar, plugins, toolbar, content_style,\r\n\r\n                    file_browser_callback_types: 'image',\r\n                    file_picker_callback: function (cb, value, meta) {\r\n                        const input = document.createElement(\"input\");\r\n                        input.setAttribute(\"type\", \"file\");\r\n                        input.setAttribute(\"accept\", \"image/*\");\r\n                        input.onchange = function () {\r\n                            const file = this.files[0];\r\n                            const reader = new FileReader();\r\n                            reader.readAsDataURL(file);\r\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\r\n                        };\r\n                        input.click();\r\n                    },\r\n                    deprecation_warnings: false\r\n                }}\r\n                onSelectionChange={editorContent}\r\n            />\r\n        </>\r\n    );\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Button, Form, Input, Row, Col, Spin, Typography, Tabs, Card } from 'antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, } from 'react';\r\nimport service from '../../services/application';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport TinyMce from \"../../utils/TinyMce\"\r\n\r\nexport default function Application() {\r\n\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n\r\n    const handleChange = (value, changeForm) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach(ent => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split('.');\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === 'undefined') {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        } varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        try {\r\n            (() => {\r\n                console.log(\"save\", data.data)\r\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\r\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\r\n                        currentTab === 2 ? service.save({ ...data, type: 'faq', data: data.data }) :\r\n                            currentTab === 4 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\r\n\r\n            })().then(res => {\r\n                AntdMsg(\"msg\", res.message);\r\n                console.log(\"resposne: \", res.data)\r\n                handleChange({ ...res.data });\r\n                setCurrentTab((currentTab + 1) % 5);\r\n            }).catch(err => {\r\n                if (typeof err.message === 'object') {\r\n                    let dt = err.message[Object.keys(err.message)[0]];\r\n                    AntdMsg(dt, 'error');\r\n                } else {\r\n                    AntdMsg(err.message, 'error');\r\n                }\r\n            }).finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n        } catch (err) {\r\n            AntdMsg(err.message, 'error');\r\n        }\r\n    }\r\n\r\n    const getDetails = (data) => {\r\n        setAjxRequesting(true);\r\n        service.detail(data).then(res => {\r\n            console.log(\"dara:\", data)\r\n            console.log(\"data:\", res.data)\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            console.log(err)\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (currentTab === 0) {\r\n            getDetails({ _id: data._id, type: \"aboutus\" });\r\n        } else if (currentTab === 1) {\r\n            getDetails({ _id: data._id, type: \"termcondition\" });\r\n        } else if (currentTab === 2) {\r\n            getDetails({ _id: data._id, type: \"faq\" });\r\n        } else if (currentTab === 4) {\r\n            getDetails({ _id: data._id, type: \"privacy-policy\" });\r\n        }\r\n    }, [currentTab])\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\r\n                    items={[\r\n                        {\r\n                            label: \"About us\",\r\n                            key: 0,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <Aboutus {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Terms & Condition\",\r\n                            key: 1,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <TandC {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"FAQ\",\r\n                            key: 2,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <FAQ {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        },\r\n                        {\r\n                            label: \"Privacy Policy\",\r\n                            key: 4,\r\n                            children: <Card style={{ borderTop: 0 }}>\r\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\r\n                            </Card>,\r\n                        }\r\n                    ]}\r\n                />\r\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\r\n                </div>\r\n            </Spin>\r\n\r\n        </>\r\n    );\r\n};\r\n\r\n\r\nconst Aboutus = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data === undefined ? \"\" : data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst TandC = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data === undefined ? \"\" : data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\n\r\nconst FAQ = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data === undefined ? \"\" : data.data} onChange={(v) => { data.data = v }} />\r\n\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}\r\nconst PrivacyPolicy = ({ data, handleChange }) => {\r\n    return (\r\n        <>\r\n            <Form layout=\"vertical\">\r\n                <Row gutter={[12, 2]}>\r\n                    <Col span={24}>\r\n                        <Form.Item label=\"Data\" required>\r\n                            <TinyMce initialValue={data.data === undefined ? \"\" : data.data} onChange={(v) => { data.data = v }} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '/ecommerce/';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + \"category/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"category/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + 'category/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get(this.baseURL + 'category/details/' + id);\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'file';\r\n\r\n    static get(url) {\r\n        return axios.get(\"../\" + url);\r\n    }\r\n    static save(data, config) {\r\n        return axios.post(this.baseURL + \"/save\", data, config);\r\n    }\r\n    static remove(data) {\r\n        return axios.post(this.baseURL + \"/remove\", data);\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Upload, Button } from \"antd\";\r\nimport ImgCrop from 'antd-img-crop';\r\nimport fileService from \"../services/file\";\r\nimport React from \"react\";\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nconst UploadImage = ({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) => {\r\n    const uploadImage = async options => {\r\n        const { onSuccess, onError, file, onProgress } = options;\r\n\r\n        const fmData = new FormData();\r\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\r\n        fmData.append(\"file\", file);\r\n        try {\r\n            fileService.save(fmData, config).then(res => {\r\n                onSuccess(\"Ok\");\r\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\r\n            })\r\n        } catch (err) {\r\n            onError({ err });\r\n        }\r\n    };\r\n\r\n    const handleOnChange = ({ file, fl }) => {\r\n        if (typeof fl !== typeof []) {\r\n            fl = [];\r\n        }\r\n        setFileList(fl);\r\n\r\n    };\r\n    const handleRemove = (file) => {\r\n        fileService.remove({ uid: file.uid }).then(res => {\r\n        })\r\n    };\r\n\r\n    if (cropImage) {\r\n        if (typeof cropImage !== typeof {}) {\r\n            cropImage = {};\r\n        }\r\n        cropImage.aspect = cropImage.aspect || 1;\r\n        cropImage.shape = cropImage.shape || 'rect';\r\n        cropImage.quality = cropImage.quality || 1;\r\n        return (\r\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\r\n                <Upload\r\n                    accept=\"image/*\"\r\n                    customRequest={uploadImage}\r\n                    onChange={handleOnChange}\r\n                    onRemove={handleRemove}\r\n                    listType={listType}\r\n                    fileList={fileList}\r\n                    className=\"image-upload-grid\"\r\n                    disabled={disabled}\r\n                >\r\n                    {\r\n                        fileList?.length >= count\r\n                            ? null\r\n                            : listType === 'picture'\r\n                                ? <Button icon={<UploadOutlined />} type=\"dashed\" >Upload</Button>\r\n                                : <div>Upload</div>\r\n                    }\r\n                </Upload>\r\n            </ImgCrop>\r\n        );\r\n    } else {\r\n        return <Upload\r\n            accept=\"image/*\"\r\n            customRequest={uploadImage}\r\n            onChange={handleOnChange}\r\n            onRemove={handleRemove}\r\n            listType={listType}\r\n            fileList={fileList}\r\n            className=\"image-upload-grid\"\r\n            disabled={disabled}\r\n        >\r\n            {\r\n                fileList?.length >= count\r\n                    ? null\r\n                    : listType === 'picture'\r\n                        ? <Button icon={<UploadOutlined />} type=\"dashed\" >Upload</Button>\r\n                        : <div>Upload</div>\r\n            }\r\n        </Upload>\r\n    }\r\n\r\n};\r\n\r\nexport default UploadImage","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Image } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../components/Pagination';\r\nimport service from '../../services/category';\r\nimport util from '../../utils/util';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport UploadImage from '../../utils/UploadImage';\r\n\r\nexport default function Category({ parentId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, parentId, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n    const addSubNewModalRef = useRef();\r\n\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 25,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'img',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v?.url} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Lable',\r\n            dataIndex: 'lable',\r\n            width: 100,\r\n            render: (v, row) => {\r\n                return <Button onClick={() => { addSubNewModalRef.current.openForm(row) }} > Detail</Button>\r\n            }\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    {row.isDeletable ? <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm> : null}\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !parentId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Category</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId }} />\r\n            <NewForm ref={addSubNewModalRef} ></NewForm>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col\r\n                    xs={{ span: 24 }}\r\n                    sm={{ span: 16 }}\r\n                    md={{ span: 10 }}\r\n                    lg={{ span: 4 }}\r\n                >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId, isTop: false, fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.details(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.img ? [res.data?.img] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ img: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Category'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input value={data.name} placeholder=\"Name...\" onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input value={data.slug} placeholder=\"Slug...\" onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Specialization\" required>\r\n                                    <Select value={data.specialization} onChange={e => { handleChange({ specialization: e }) }} mode=\"multiple\" >\r\n                                        <Select.Option value={\"ocassion\"}>Ocassion</Select.Option>\r\n                                        <Select.Option value={\"flavour\"}>Flavour</Select.Option>\r\n                                        <Select.Option value={\"recipient\"}>Recipient</Select.Option>\r\n                                        <Select.Option value={\"relation\"}>Relation</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nconst NewForm = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>Data of &nbsp;<span style={{ color: 'red' }}>{data.name}</span></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={null}\r\n            >\r\n                <Category parentId={data._id}></Category>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'banner';\r\n\r\n    // for Banners : \r\n    static bannerDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static bannerList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static bannerSave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static bannerDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport service from '../../services/banner';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport util from \"../../utils/util\";\r\n\r\n\r\nexport default function Banner() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 20,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Image',\r\n            dataIndex: 'image',\r\n            width: 100,\r\n            render: (v) => {\r\n                return <Image src={v} height={80} />\r\n            }\r\n        },\r\n        {\r\n            title: 'Uploaded At',\r\n            dataIndex: 'createdAt',\r\n            width: 100,\r\n            render: (v) => {\r\n                return moment(v).format(\"dddd, MMMM Do YYYY, h:mm:ss a\");\r\n            }\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this image?. Be sure to delete the image from server.\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.bannerList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.bannerDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Banners</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerDetails(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.image ? [res.data?.image] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.bannerSave(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ image: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Banner'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecommerce/variant/';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/variant';\r\n\r\nexport default function Varient({ productId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, productId, });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Category',\r\n            dataIndex: 'cateId',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Color',\r\n            dataIndex: 'color',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Inventory',\r\n            dataIndex: 'inventory',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Strile',\r\n            dataIndex: 'strile',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Total',\r\n            dataIndex: 'total',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Unit',\r\n            dataIndex: 'unite',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Volume',\r\n            dataIndex: 'volume',\r\n        },\r\n        {\r\n            title: 'Price',\r\n            dataIndex: 'price',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Kilo-Gram',\r\n            dataIndex: 'kg',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!productId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Varient</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, productId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, productId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { productId }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || \"\") });\r\n        }\r\n    }, [data.name]);\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Varient'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Category\" required>\r\n                                    <Input placeholder=\"Category\" value={data.cateId} onChange={e => { handleChange({ cateId: e.target.value }) }} />\r\n                                </Form.Item>\r\n                                <Form.Item label=\"Price\" required>\r\n                                    <Input placeholder=\"price\" value={data.price} onChange={e => { handleChange({ price: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Color\" required>\r\n                                    <Input placeholder=\"Color\" value={data.color} onChange={e => { handleChange({ color: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Form.Item label=\"Kilo-Gram\" required>\r\n                                    <Input placeholder=\"Kilo-Gram\" value={data.kg} onChange={e => { handleChange({ kg: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + '/list-user', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'user';\r\n\r\n    static detailJob(id, data) {\r\n        return axios.get(this.baseURL + '/address/details' + id, { params: data });\r\n    }\r\n    static listJob(data) {\r\n        return axios.get(this.baseURL + '/address/list', { params: data });\r\n    }\r\n    static saveJob(data, query) {\r\n        return axios.post(this.baseURL + '/address/save', data, { params: query });\r\n    }\r\n    static deleteJob(id) {\r\n        return axios.post(this.baseURL + '/address/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/address';\r\n\r\n\r\nexport default function Address({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'City',\r\n            dataIndex: 'city',\r\n\r\n        },\r\n        {\r\n            title: 'Pin',\r\n            dataIndex: 'pin',\r\n        },\r\n        {\r\n            title: 'State',\r\n            dataIndex: 'state',\r\n        },\r\n        {\r\n            title: 'Street 1',\r\n            dataIndex: 'street1',\r\n        },\r\n        {\r\n            title: 'Street 2',\r\n            dataIndex: 'street2',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listJob(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !userId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveJob(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"City\" required>\r\n                                    <Input placeholder=\"City\" value={data.city} onChange={e => { handleChange({ city: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Pin\" required>\r\n                                    <Input placeholder=\"Pin\" value={data.pin} onChange={e => { handleChange({ pin: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"State\" required>\r\n                                    <Input placeholder=\"State\" value={data.state} onChange={e => { handleChange({ state: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 1\" required>\r\n                                    <Input placeholder=\"Street 1\" value={data.street1} onChange={e => { handleChange({ street1: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 2\" required>\r\n                                    <Input placeholder=\"Street 2\" value={data.street2} onChange={e => { handleChange({ street2: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Address productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'ecommerce/product/';\r\n\r\n\r\n    static detailProduct(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listProduct(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveProduct(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static saveAddOnProduct(data, query) {\r\n        return axios.post(this.baseURL + \"save-addon\", data, { params: query });\r\n    }\r\n    static detailUser(id, data) {\r\n        return axios.get(this.baseURL + 'details/' + id, { params: data });\r\n    }\r\n    static listUser(data) {\r\n        return axios.get(this.baseURL + 'list', { params: data });\r\n    }\r\n    static saveUser(data, query) {\r\n        return axios.post(this.baseURL + \"save\", data, { params: query });\r\n    }\r\n    static deleteUser(id) {\r\n        return axios.post(this.baseURL + 'delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/product';\r\n\r\n\r\nexport default function Cart({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Product Name',\r\n            dataIndex: 'name',\r\n\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.listProduct(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !userId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveJob(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"City\" required>\r\n                                    <Input placeholder=\"City\" value={data.city} onChange={e => { handleChange({ city: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Pin\" required>\r\n                                    <Input placeholder=\"Pin\" value={data.pin} onChange={e => { handleChange({ pin: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"State\" required>\r\n                                    <Input placeholder=\"State\" value={data.state} onChange={e => { handleChange({ state: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 1\" required>\r\n                                    <Input placeholder=\"Street 1\" value={data.street1} onChange={e => { handleChange({ street1: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Street 2\" required>\r\n                                    <Input placeholder=\"Street 2\" value={data.street2} onChange={e => { handleChange({ street2: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Cart productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'wallet';\r\n\r\n    static walletdetail(id, data) {\r\n        return axios.get(this.baseURL + '/details' + id, { params: data });\r\n    }\r\n    static walletlist(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static walletsave(data, query) {\r\n        return axios.post(this.baseURL + '/save', data, { params: query });\r\n    }\r\n    \r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Input, Select } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport util from '../../../utils/util';\r\nimport service from '../../../services/wallet';\r\n\r\n\r\nexport default function WalletHistory({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        // {\r\n        //     title: 'Product Name',\r\n        //     dataIndex: 'name',\r\n\r\n        // },\r\n        {\r\n            title: 'Amount',\r\n            dataIndex: 'amount',\r\n\r\n        },\r\n        {\r\n            title: 'Type',\r\n            dataIndex: 'type',\r\n\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.walletlist(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteJob(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                !userId\r\n                    ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\r\n                    : null\r\n            }\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected datas?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            console.log('dt', dt);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.walletsave(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.name || '') });\r\n        }\r\n    }, [data.name]);\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} defaultValue=\"admin\" onChange={e => { handleChange({ type: e }) }} >\r\n                                        <Select.Option value=\"referral\">Referral</Select.Option>\r\n                                        <Select.Option value=\"payment-gateway\">Payment-Gateway</Select.Option>\r\n                                        <Select.Option value=\"admin\">Admin</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Amount\" required>\r\n                                    <Input placeholder=\"Amount\" value={data.amount} onChange={e => { handleChange({ amount: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add User' : 'List of Varient')}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <WalletHistory productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport UserService from '../../../services/userMange';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport Address from './Address';\r\nimport Cart from './Cart';\r\nimport WalletHistory from './WalletHistory';\r\n\r\n\r\nexport default function UserManagement({ userId }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\r\n    const addNewModalRef = useRef();\r\n    const ModelModalRef = useRef();\r\n    const ModelModalCartRef = useRef()\r\n    const ModelModalWalletRef = useRef()\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Username',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Phone',\r\n            dataIndex: 'phone',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Email',\r\n            dataIndex: 'email',\r\n            width: 200,\r\n        },\r\n        {\r\n            title: 'Job',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, name: row.name }) }} >Address</Button>\r\n        },\r\n        {\r\n            title: 'Cart',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalCartRef.current.openForm({ _id: row._id, name: row.name }) }} >Cart</Button>\r\n        },\r\n        {\r\n            title: 'Wallet History',\r\n            dataIndex: '_id',\r\n            width: 80,\r\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalWalletRef.current.openForm({ _id: row._id, name: row.name }) }} >Wallet</Button>\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: status => {\r\n                if (status === \"blocked\") {\r\n                    return <Tag color='red'>Blocked</Tag>\r\n                } else if (status === \"active\") {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color=\"yellow\">Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        UserService.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        UserService.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {!userId ? <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, userId }} />\r\n            <ModelModal ref={ModelModalRef} />\r\n            <ModelModal1 ref={ModelModalCartRef} />\r\n            <ModelModal2 ref={ModelModalWalletRef} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    const onChange = (v, key) => {\r\n\t\tqData[key] = v;\r\n\t\tif (v === undefined || v === \"\") {\r\n\t\t\tdelete qData[key];\r\n\t\t\tlist();\r\n\t\t}\r\n\t};\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item>\r\n                        <Select value={qData.status} allowClear placeholder=\"Search By Status\" onChange={e => onChange(e, \"status\")} >\r\n                            <Select.Option value=\"active\">Active</Select.Option>\r\n                            <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                            <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, userId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [fileList, setFileList] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { userId }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        UserService.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        UserService.saveUser(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setFileList([]);\r\n        }\r\n    }, [open]);\r\n\r\n    useEffect(() => {\r\n        handleChange({ avatar: fileList?.[0] });\r\n    }, [fileList]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={20}>\r\n                                <Row gutter={[12, 2]}>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Username\" required>\r\n                                            <Input placeholder=\"John Doe\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Email\" required>\r\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col span={12}>\r\n                                        <Form.Item label=\"Phone\" required>\r\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Avatar\">\r\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={10}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value=\"active\">Active</Select.Option>\r\n                                        <Select.Option value=\"inactive\">Inactive</Select.Option>\r\n                                        <Select.Option value=\"blocked\">Blocked</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Job List <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Address userId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal1 = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Product List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <Cart userId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst ModelModal2 = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({});\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { ...dt } : { status: true });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={<>All Product List of <Typography.Text type=\"danger\">{data?.name}</Typography.Text></>}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1600}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                ]}\r\n            >\r\n                <WalletHistory userId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'specialization';\r\n\r\n    // for Banners : \r\n    static typeDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static typeList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static typeSave(data, query) {\r\n        return axios.post(this.baseURL + \"/create\", data, { params: query });\r\n    }\r\n    static typeDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Divider, message, Checkbox, Card } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef, Fragment } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/product';\r\nimport util from '../../../utils/util';\r\nimport Varient from './Varient';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport categoryService from '../../../services/category';\r\nimport specializationService from \"../../../services/specialization\"\r\nimport TinyMce from '../../../utils/TinyMce';\r\n\r\nexport default function Product({ productSpecialization, categoryId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [specializations, setSpecializations] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type: 'product', categoryId });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            width: 400,\r\n            render: (v) => <Typography.Text ellipsis={{ expandable: true }}>{v}</Typography.Text>,\r\n        },\r\n        {\r\n            title: 'Meta-Title',\r\n            dataIndex: 'metaTitle',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Tag',\r\n            dataIndex: 'metaTag',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Meta-Description',\r\n            dataIndex: 'metaDescription',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        if (qData.categoryId !== \"\") {\r\n            service.listUser(qData).then(res => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n            }).catch(err => { }).finally(() => {\r\n                setLoading(false);\r\n            });\r\n        }\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit, qData.categoryId, categoryId]);\r\n\r\n    useEffect(() => {\r\n        categoryService.list({isAll: 1}).then(res => {\r\n            setCategory(res.data || []);\r\n        }).catch(err => {\r\n            message.error('Category data not loaded');\r\n        });\r\n        specializationService.typeList().then(res => {\r\n            setSpecializations(res.data || []);\r\n        }).catch(err => {\r\n            message.error('Specialization data not loaded');\r\n        });\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, category, qData, specializations, productSpecialization, categoryId }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    const onChange = (v, key) => {\r\n\t\tqData[key] = v;\r\n\t\tif (v === undefined || v === \"\") {\r\n\t\t\tdelete qData[key];\r\n\t\t\tlist();\r\n\t\t}\r\n\t};\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, categoryId, category, specializations, productSpecialization } = props;\r\n\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n    const [file, setFile] = useState([]);\r\n\r\n    const handleChange = (v, k) => {\r\n        let varDt = data;\r\n        let keys = k.split('.');\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (i + 1 === keys.length) {\r\n                varDt[keys[i]] = v;\r\n            } else {\r\n                if (typeof varDt[keys[i]] === 'undefined') {\r\n                    if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                        varDt[keys[i]] = [];\r\n                    } else {\r\n                        varDt[keys[i]] = {};\r\n                    }\r\n                } varDt = varDt[keys[i]];\r\n            }\r\n        }\r\n        setData({ ...data, ...v });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt, ocassion: [], flavour: [], recipient: [], relation: [], specializationIds: [] }\r\n                    : { isPremium: false, isBestSelling: false, forBirthday: false, forAnniversary: false, isBestSellingCombos: false, variants: [{}], ocassion: [], flavour: [], recipient: [], relation: [], specializationIds: [], categoryIds: [categoryId] }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveUser(data).then((res) => {\r\n            message.success(res.message)\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                message.error(dt);\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.name || ''), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, thumbImg: thumbFile[0] })\r\n    }, [thumbFile])\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n    useEffect(() => {\r\n        if (data?.ocassion?.length > 0 || data?.flavour?.length > 0 || data?.recipient?.length > 0 || data?.relation?.length > 0) {\r\n            handleChange(\r\n                [\r\n                    ...data?.ocassion,\r\n                    ...data?.flavour,\r\n                    ...data?.relation,\r\n                    ...data?.recipient\r\n                ],\r\n                'specializationIds')\r\n        }\r\n    }, [data.ocassion, data.flavour, data?.relation, data?.recipient]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add New' : 'Edit') + ' Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, \"name\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"slug\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Category\" required>\r\n                                    <Select mode=\"multiple\" value={data.categoryIds} onChange={v => { handleChange(v, \"categoryIds\") }}\r\n                                        options={category.map(v => ({\r\n                                            value: v._id,\r\n                                            label: v.name\r\n                                        }))}\r\n                                    >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            {\r\n                                productSpecialization?.map((v, i) => (\r\n                                    <Col span={12} key={i}>\r\n                                        <Form.Item label={`Specialization (${v?.toUpperCase()})`} >\r\n                                            <Select mode=\"multiple\" value={data?.[v]} onChange={vv => { handleChange(vv, v) }}\r\n                                                options={\r\n                                                    specializations.filter(vv => vv.type === v).map((vv, ii) => (\r\n                                                        {\r\n                                                            value: vv._id,\r\n                                                            label: vv.name,\r\n                                                        }\r\n                                                    ))\r\n                                                } >\r\n                                            </Select>\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                ))\r\n                            }\r\n\r\n                            <Col span={24}>\r\n                                <Variant {...{ variantDetails: data.variants, parentKay: 'variants', handleChange }} />\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <TinyMce initialValue={data.description} onChange={(v) => { data.description = v }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"High Light\" required>\r\n                                    <TinyMce initialValue={data.heighlight} onChange={(v) => { data.heighlight = v }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Meta Title\" required>\r\n                                    <Input placeholder=\"Meta title\" value={data.metaTitle} onChange={e => { handleChange(e.target.value, \"metaTitle\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Meta Tag\" required>\r\n                                    <Input placeholder=\"Meta tag\" value={data.metaTag} onChange={e => { handleChange(e.target.value, \"metaTag\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Meta Description\" required>\r\n                                    <Input.TextArea rows={1} placeholder=\"Meta-Description\" value={data.metaDescription} onChange={e => { handleChange(e.target.value, \"metaDescription\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Divider />\r\n                            <Col span={8}>\r\n                                <Form.Item>\r\n                                    <Card bordered size=\"small\">\r\n                                        <Checkbox value={data.isPopular} onChange={v => handleChange({ isPopular: v })}>Popular</Checkbox>\r\n                                    </Card>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item>\r\n                                    <Card bordered size=\"small\">\r\n                                        <Checkbox value={data.isPremium} onChange={v => handleChange({ isPremium: v })}>Premium</Checkbox>\r\n                                    </Card>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item>\r\n                                    <Card bordered size=\"small\">\r\n                                        <Checkbox value={data.isBestSelling} onChange={v => handleChange({ isBestSelling: v })}>Best Selling</Checkbox>\r\n                                    </Card>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange(e, \"status\") }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n\r\n                            <Divider />\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Thumbnail Photo\">\r\n                                    <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nfunction Variant({ variantDetails: data, parentKay, handleChange }) {\r\n    return (\r\n        <Fragment>\r\n            <Divider orientation=\"left\">{parentKay === 'variants' ? \"Variants\" : \"Variant\"}</Divider>\r\n            <Table\r\n                {...{\r\n                    bordered: true,\r\n                    size: 'small',\r\n                    showHeader: true,\r\n                    footer: null,\r\n                    tableLayout: undefined,\r\n                }}\r\n                pagination={{ position: ['none'] }}\r\n                columns={\r\n                    [\r\n                        {\r\n                            title: 'Weight',\r\n                            dataIndex: 'weight',\r\n                            // width: 150,\r\n                            render: (v, row, i) => <Input placeholder=\"Weight\" value={v} onChange={(e) => { handleChange((e.target.value), `${parentKay}.${i}.weight`) }} />\r\n                        },\r\n                        {\r\n                            title: 'Price',\r\n                            dataIndex: 'price',\r\n                            width: 300,\r\n                            render: (v, row, i) => <Input placeholder=\"Price (In ₹)\" value={v} onChange={(e) => { handleChange(util.handleInteger(e.target.value), `${parentKay}.${i}.price`) }} />\r\n                        },\r\n                        {\r\n                            title: 'Actual Price',\r\n                            dataIndex: 'actual_price',\r\n                            width: 300,\r\n                            render: (v, row, i) => <Input placeholder=\"Actual Price (In ₹)\" value={v} onChange={(e) => { handleChange(util.handleFloat(e.target.value), `${parentKay}.${i}.actualPrice`) }} />\r\n                        },\r\n                        {\r\n                            title: 'Action',\r\n                            dataIndex: 'price',\r\n                            width: 100,\r\n                            render: (v, row, i) => {\r\n                                return <>\r\n                                    {\r\n                                        i + 1 === data.length\r\n                                            ? <Button icon={<PlusOutlined />} shape=\"circle\" type=\"dashed\" onClick={() => { handleChange([...data, {}], parentKay); }} />\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        i + 1 === data.length && i !== 0\r\n                                            ? <Button icon={<CloseOutlined />} shape=\"circle\" type=\"dashed\" className=\"mx-2\" danger onClick={() => { data.pop(); handleChange([...data], parentKay); }} />\r\n                                            : null\r\n                                    }\r\n                                </>\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n                dataSource={data?.length ? data?.map((v, i) => ({ ...v, key: i })) : []}\r\n            />\r\n        </Fragment>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'offer';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get(this.baseURL + '/details/' + id);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, DatePicker, Tag } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../services/offer';\r\nimport ProductService from '../../services/product';\r\nimport UserService from '../../services/userList';\r\nimport Pagination from '../components/Pagination';\r\nimport UploadImage from '../../utils/UploadImage';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport dayjs from 'dayjs';\r\nimport moment from 'moment';\r\nimport util from '../../utils/util';\r\n\r\n\r\nexport default function Offer() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const [product, setProduct] = useState([]);\r\n    const [user, setUser] = useState([]);\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 30,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Title',\r\n            dataIndex: 'title',\r\n            width: 150\r\n        },\r\n        {\r\n            title: 'Products',\r\n            dataIndex: 'productDetails',\r\n            width:350,\r\n            render: v => v.map(vv => <Tag key={vv._id}>{vv.name}</Tag>)\r\n        },\r\n        {\r\n            title: 'Discount Percent',\r\n            dataIndex: 'discountPercent',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Max Discount',\r\n            dataIndex: 'maxDiscountValue',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Min Order Price',\r\n            dataIndex: 'minimunOrderPrice',\r\n            width: 100\r\n        },\r\n        {\r\n            title: 'Duration',\r\n            dataIndex: 'startDate',\r\n            width: 200,\r\n            render: (v, row) => <span>{moment(v).format('DD MMM YYYY')} To {moment(row.endDate).format('DD MMM YYYY')} </span>\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this User?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.list(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listProduct() {\r\n        ProductService.listUser()\r\n            .then(res => { setProduct(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n    function listUser() {\r\n        UserService.listUser()\r\n            .then(res => { setUser(res.data || []); }).catch(err => { AntdMsg('User data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.delete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n        listProduct()\r\n        listUser()\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Offer</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, product, user }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    const onChange = (v, key) => {\r\n\t\tqData[key] = v;\r\n\t\tif (v === undefined || v === \"\") {\r\n\t\t\tdelete qData[key];\r\n\t\t\tlist();\r\n\t\t}\r\n\t};\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, product, } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [file, setFile] = useState([]);\r\n\r\n    const handleChange = (value) => {\r\n        setData({ ...data, ...value });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : { fileType: 'photo' }\r\n            );\r\n\r\n            if (dt.img?.url) {\r\n                setFile([dt.img]);\r\n            } else {\r\n                setFile([]);\r\n            }\r\n\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange({ slug: util.removeSpecialChars(data.title) });\r\n        }\r\n    }, [data.title]);\r\n\r\n    useEffect(() => {\r\n        console.log('---', file);\r\n        setData({ ...data, img: file?.[0] })\r\n    }, [file])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Offer'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={800}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.title} onChange={e => { handleChange({ title: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange({ slug: util.removeSpecialChars(e.target.value) }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Discount Percent\" required>\r\n                                    <Input placeholder=\"Discount Percent\" value={data.discountPercent} onChange={e => { handleChange({ discountPercent: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Max Discount Value\" required>\r\n                                    <Input placeholder=\"Max Discount Amount\" value={data.maxDiscountValue} onChange={e => { handleChange({ maxDiscountValue: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Form.Item label=\"Minimun Order Value\" required>\r\n                                    <Input placeholder=\" Minimun Order Amount\" value={data.minimunOrderPrice} onChange={e => { handleChange({ minimunOrderPrice: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Product\" required>\r\n                                    <Select mode=\"multiple\" value={data.productIds} onChange={v => { handleChange({ productIds: v }) }}\r\n                                        options={\r\n                                            product.map(v => (\r\n                                                {\r\n                                                    value: v._id,\r\n                                                    label: v.name,\r\n                                                }\r\n                                            ))\r\n                                        } >\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Duration\" required>\r\n                                    <DatePicker.RangePicker\r\n                                        format='DD MMM YYYY'\r\n                                        value={data.startDate && data.endDate && [dayjs(data.startDate), dayjs(data.endDate)]}\r\n                                        onChange={(e) => { handleChange({ startDate: e?.[0] ? new Date(e?.[0]) : null, endDate: e?.[1] ? new Date(e?.[1]) : null }) }}\r\n                                        style={{ width: '100%' }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={6}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage  {...{ fileList: file, setFileList: setFile }} count={1} listType=\"picture\" />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, Divider } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport Pagination from '../../components/Pagination';\r\nimport { AntdMsg } from '../../../utils/Antd';\r\nimport service from '../../../services/product';\r\nimport util from '../../../utils/util';\r\nimport Varient from './Varient';\r\nimport UploadImage from '../../../utils/UploadImage';\r\nimport categoryService from '../../../services/category';\r\n\r\nexport default function AddOn({ parentId }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [category, setCategory] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, parentId,type:'addOn' });\r\n    const addNewModalRef = useRef();\r\n    const addNewLabelRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 40,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 150,\r\n        },\r\n        {\r\n            title: 'Slug',\r\n            dataIndex: 'slug',\r\n            width: 100,\r\n        },\r\n        {\r\n            title: 'Description',\r\n            dataIndex: 'description',\r\n            width: 400,\r\n            render: (v) => <Typography.Text ellipsis={{ expandable: true }}>{v}</Typography.Text>,\r\n        },\r\n        {\r\n            title:'Type',\r\n            dataIndex:'type',\r\n            render: type => {\r\n                    return <Tag color='blue'>AddOn</Tag>\r\n                }\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this data?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n    function list() {\r\n        setLoading(true);\r\n        service.listUser(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n    function listCategory() {\r\n        categoryService.list()\r\n            .then(res => { setCategory(res.data || []); }).catch(err => { AntdMsg('Product data not loaded', 'error'); });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service.deleteUser(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n    useEffect(() => {\r\n        list();\r\n        listCategory();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            {!parentId ? <Typography.Title level={5} style={{ marginTop: 0 }}>Product List</Typography.Title> : null}\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, parentId, category }} />\r\n            <AddLabel ref={addNewLabelRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    const onChange = (v, key) => {\r\n\t\tqData[key] = v;\r\n\t\tif (v === undefined || v === \"\") {\r\n\t\t\tdelete qData[key];\r\n\t\t\tlist();\r\n\t\t}\r\n\t};\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected data ?\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, parentId, category } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [thumbFile, setThumbFile] = useState([]);\r\n    const [file, setFile] = useState([]);\r\n\r\n\r\n    const handleChange = (v, k) => {\r\n        let varDt = data;\r\n        let keys = k.split('.');\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (i + 1 === keys.length) {\r\n                varDt[keys[i]] = v;\r\n            } else {\r\n                if (typeof varDt[keys[i]] === 'undefined') {\r\n                    if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                        varDt[keys[i]] = [];\r\n                    } else {\r\n                        varDt[keys[i]] = {};\r\n                    }\r\n                } varDt = varDt[keys[i]];\r\n            }\r\n        }\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { _id: dt }\r\n                    : { parentId, isPremium: false, isBestSelling: false, forBirthday: false, forAnniversary: false, isBestSellingCombos: false, variants: [{}] }\r\n            );\r\n        }\r\n    }));\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service.detailUser(data._id).then(res => {\r\n            setData(res.data || {});\r\n            setFile(res.data.imgs.length ? [...res.data.imgs] : [])\r\n            setThumbFile(res.data.thumbImg ? [res.data.thumbImg] : [])\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.saveAddOnProduct(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data.name || \"\"), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        if (!data._id) {\r\n            handleChange(util.removeSpecialChars(data?.name || ''), 'slug');\r\n        }\r\n    }, [data.name]);\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, thumbImg: thumbFile[0] })\r\n    }, [thumbFile])\r\n\r\n    useEffect(() => {\r\n        setData({ ...data, imgs: file })\r\n    }, [file])\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({})\r\n        }\r\n    }, [open])\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add New' : 'Edit') + ' AddOn Product'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1000}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange(e.target.value, \"name\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Slug\" required>\r\n                                    <Input placeholder=\"Slug\" value={data.slug} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"slug\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Description\" required>\r\n                                    <Input.TextArea rows={4} placeholder=\"Description\" value={data.description} onChange={e => { handleChange(util.removeSpecialChars(e.target.value), \"description\") }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Type\" required>\r\n                                    <Select value={data.type} onChange={e => { handleChange(e, \"type\") }} >\r\n                                        <Select.Option value={'addOn'}>AddOn</Select.Option>\r\n                                        <Select.Option value={'product'}>Product</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={e => { handleChange(e, \"status\") }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n\r\n                                <Variant {...{ variantDetails: data.variants, parentKay: 'variants', handleChange }} />\r\n                            </Col>\r\n                            <Divider />\r\n                            <br />\r\n                            <Col span={4}>\r\n                                <Form.Item label=\"Thumbnail Photo\">\r\n                                    <UploadImage {...{ fileList: thumbFile, setFileList: setThumbFile }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={20}>\r\n                                <Form.Item label=\"Photo\">\r\n                                    <UploadImage {...{ fileList: file, setFileList: setFile, count: 20 }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nconst AddLabel = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData({ ...dt });\r\n        }\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? `Add User of ${(data.name)}` : `Variants of ${(data.name)}`)}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={1200}\r\n                className=\"app-modal-body\"\r\n            >\r\n                <Varient productId={data._id} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nfunction Variant({ variantDetails: data, parentKay, handleChange }) {\r\n    useEffect(() => {\r\n        console.log(parentKay, parentKay === 'variants');\r\n    }, [parentKay])\r\n    return (\r\n        <>\r\n            <div><Divider orientation=\"left\">{parentKay === 'variants' ? \"Variants\" : \"Variant\"}</Divider></div>\r\n            <Row>\r\n                <Col span={4}>\r\n                    <label className=\"req\">Weight</label>\r\n                </Col>\r\n                <Col span={4}>\r\n                    <label className=\"req\">Price</label>\r\n                </Col>\r\n                <Col span={8}>\r\n                    <label className=\"req\">Actual Price (In ₹)</label>\r\n                </Col>\r\n            </Row>\r\n            {\r\n                data?.map((v, i) => (\r\n                    <React.Fragment key={i}>\r\n                        <Row>\r\n                            <Col span={4}>\r\n                                <Input placeholder=\"Weight\" value={v.weight} onChange={(e) => { handleChange((e.target.value), `${parentKay}.${i}.weight`) }} />\r\n                            </Col>\r\n                            <Col span={4}>\r\n                                <Input placeholder=\"Price\" value={v.price} onChange={(e) => { handleChange(util.handleInteger(e.target.value), `${parentKay}.${i}.price`) }} />\r\n                            </Col>\r\n                            <Col span={8}>\r\n                                <Input placeholder=\"Actual Price\" value={v.actualPrice} onChange={(e) => { handleChange(util.handleFloat(e.target.value), `${parentKay}.${i}.actualPrice`) }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </React.Fragment>\r\n                ))\r\n            }\r\n        </>\r\n    );\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'homepageitems';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get(this.baseURL + '/details/' + id);\r\n    }\r\n}\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport {\r\n  Table,\r\n  Button,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Popconfirm,\r\n  Modal,\r\n  Spin,\r\n  Typography,\r\n  Select,\r\n  Input,\r\n  Tag,\r\n  Image,\r\n} from \"antd\";\r\nimport {\r\n  DeleteOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n  useEffect,\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n} from \"react\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { AntdMsg } from \"../../utils/Antd\";\r\nimport service from \"../../services/homepageItems\";\r\nimport serviceProduct from \"../../services/product\";\r\nimport offerService from \"../../services/offer\";\r\nimport categoryService from \"../../services/category\";\r\nimport bannerService from \"../../services/banner\";\r\nimport util from \"../../utils/util\";\r\n\r\nexport default function Product() {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selected, setSelected] = useState([]);\r\n  const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n  const addNewModalRef = useRef();\r\n  const [allProduct, setAllProduct] = useState([]);\r\n  const [allCategories, setAllCategories] = useState([]);\r\n  const [allOffers, setAllOffers] = useState([]);\r\n  const [allBanners, setAllBanners] = useState([]);\r\n\r\n  const columns = [\r\n    {\r\n      title: \"#\",\r\n      width: 40,\r\n      render: (v, row, i) => <b>{i + 1}</b>,\r\n    },\r\n    {\r\n      title: \"Product \",\r\n      dataIndex: \"productDetails\",\r\n      render: (v) => v.map((vv) => <Tag>{vv.name}</Tag>),\r\n    },\r\n    {\r\n      title: \"Categories \",\r\n      dataIndex: \"categoryDetails\",\r\n      render: (v) => v.map((vv) => <Tag>{vv.name}</Tag>),\r\n    },\r\n    {\r\n      title: \"Banners \",\r\n      dataIndex: \"bannerDetails\",\r\n      render: (v) => v.map((vv) => <Image src={vv?.imgUrl} height={80} />),\r\n    },\r\n    {\r\n      title: \"Offer \",\r\n      dataIndex: \"offerDetails\",\r\n      render: (v) => v.map((vv) => <Tag>{vv.title}</Tag>),\r\n    },\r\n    {\r\n      title: \"Display Order\",\r\n      dataIndex: \"displayOrder\",\r\n      width: 250,\r\n    },\r\n    {\r\n      title: \"Display Type\",\r\n      dataIndex: \"displayType\",\r\n      width: 250,\r\n    },\r\n    {\r\n      title: \"Slug\",\r\n      dataIndex: \"slug\",\r\n      width: 150,\r\n    },\r\n    {\r\n      title: \"Action\",\r\n      dataIndex: \"_id\",\r\n      width: 70,\r\n      render: (v, row) => {\r\n        return (\r\n          <>\r\n            <Popconfirm\r\n              title=\"Are you sure to delete this data?\"\r\n              onConfirm={() => {\r\n                deleteData(row._id);\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                size=\"small\"\r\n                danger\r\n                icon={<DeleteOutlined />}\r\n              />\r\n              &nbsp;\r\n            </Popconfirm>\r\n            <Button\r\n              type=\"primary\"\r\n              size=\"small\"\r\n              icon={<EditOutlined />}\r\n              onClick={() => {\r\n                addNewModalRef.current.openForm(row);\r\n              }}\r\n            />\r\n          </>\r\n        );\r\n      },\r\n    },\r\n  ].filter((item) => !item.hidden);\r\n  function list() {\r\n    setLoading(true);\r\n    service\r\n      .list(qData)\r\n      .then((res) => {\r\n        setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n        setQData({\r\n          ...qData,\r\n          limit: res.extra.limit,\r\n          page: res.extra.page,\r\n          total: res.extra.total,\r\n        });\r\n      })\r\n      .catch((err) => {})\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    list();\r\n  }, []);\r\n  const deleteData = (id) => {\r\n    service\r\n      .delete(id)\r\n      .then((res) => {\r\n        AntdMsg(res.message);\r\n        list();\r\n        setSelected([]);\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(err.message, \"error\");\r\n      });\r\n  };\r\n  const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n  tableColumns[0].fixed = true;\r\n  tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n  const tableProps = {\r\n    bordered: true,\r\n    loading,\r\n    size: \"small\",\r\n    title: () => (\r\n      <Search\r\n        {...{ addNewModalRef, selected, deleteData, qData, setQData, list }}\r\n      />\r\n    ),\r\n    showHeader: true,\r\n    footer: () => <Pagination {...{ qData, setQData }} />,\r\n    rowSelection: {\r\n      onChange: (selectedRowKeys) => {\r\n        setSelected(selectedRowKeys);\r\n      },\r\n    },\r\n    tableLayout: undefined,\r\n  };\r\n  useEffect(() => {\r\n    serviceProduct.listUser({ isAll: 1 }).then((res) => {\r\n      setAllProduct(\r\n        res.data.map((v) => ({ ...v, label: v.name, value: v._id }))\r\n      );\r\n    });\r\n    offerService.list({ isAll: 1 }).then((res) => {\r\n      setAllOffers(\r\n        res.data.map((v) => ({ ...v, label: v.title, value: v._id }))\r\n      );\r\n    });\r\n    categoryService.list({ isAll: 1 }).then((res) => {\r\n      setAllCategories(\r\n        res.data.map((v) => ({ ...v, label: v.name, value: v._id }))\r\n      );\r\n    });\r\n    bannerService.bannerList({ isAll: 1 }).then((res) => {\r\n      setAllBanners(\r\n        res.data.map((v) => ({ ...v, label: v.name, value: v._id }))\r\n      );\r\n    });\r\n  }, [qData.page, qData.limit]);\r\n  return (\r\n    <>\r\n      <Typography.Title level={5} style={{ marginTop: 0 }}>\r\n        Product List\r\n      </Typography.Title>\r\n      <Table\r\n        {...tableProps}\r\n        pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n        columns={tableColumns}\r\n        dataSource={data.length ? data : []}\r\n        scroll={{ y: \"calc(100vh - 340px)\", x: \"calc(100vw - 387px)\" }}\r\n      />\r\n      <AddForm\r\n        ref={addNewModalRef}\r\n        {...{ list, allProduct, allBanners, allCategories, allOffers }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nfunction Search({\r\n  addNewModalRef,\r\n  selected,\r\n  deleteData,\r\n  qData,\r\n  setQData,\r\n  list,\r\n}) {\r\n  return (\r\n    <Form onSubmitCapture={list} className=\"search-form\">\r\n      <Row gutter={[12, 2]}>\r\n        <Col span={4}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Input\r\n              placeholder=\"Search by name or code\"\r\n              value={qData.key}\r\n              onChange={(e) => setQData({ ...qData, key: e.target.value })}\r\n              allowClear\r\n            />\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={3}>\r\n          <Form.Item style={{ marginBottom: 0 }}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Search\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={5}>\r\n          <Form.Item style={{ marginBottom: 0, float: \"right\" }}>\r\n            <Button\r\n              type=\"primary\"\r\n              icon={<PlusOutlined />}\r\n              onClick={() => {\r\n                addNewModalRef.current.openForm();\r\n              }}\r\n            >\r\n              Add New\r\n            </Button>\r\n          </Form.Item>\r\n          {selected.length ? (\r\n            <Popconfirm\r\n              title=\"Are you sure to delete these selected data ?\"\r\n              onConfirm={() => {\r\n                deleteData(selected);\r\n              }}\r\n              okText=\"Yes\"\r\n              cancelText=\"No\"\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                danger\r\n                style={{ float: \"right\" }}\r\n                icon={<DeleteOutlined />}\r\n              >\r\n                Delete Selected\r\n              </Button>\r\n            </Popconfirm>\r\n          ) : null}\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n  const { list, allProduct, allBanners, allCategories, allOffers } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const [data, setData] = useState({ aspect: 1 });\r\n  const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n  const handleChange = (v, k) => {\r\n    let varDt = data;\r\n    let keys = k.split(\".\");\r\n    for (let i = 0; i < keys.length; i++) {\r\n      if (i + 1 === keys.length) {\r\n        varDt[keys[i]] = v;\r\n      } else {\r\n        if (typeof varDt[keys[i]] === \"undefined\") {\r\n          if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n            varDt[keys[i]] = [];\r\n          } else {\r\n            varDt[keys[i]] = {};\r\n          }\r\n        }\r\n        varDt = varDt[keys[i]];\r\n      }\r\n    }\r\n    setData({ ...data });\r\n  };\r\n  useImperativeHandle(ref, () => ({\r\n    openForm(dt) {\r\n      setOpen(true);\r\n      setData(dt ? { ...dt } : {});\r\n    },\r\n  }));\r\n\r\n  const save = () => {\r\n    setAjxRequesting(true);\r\n    service\r\n      .save(data)\r\n      .then((res) => {\r\n        AntdMsg(res.message);\r\n        handleChange({ ...res.data });\r\n        list();\r\n        setOpen(false);\r\n      })\r\n      .catch((err) => {\r\n        if (typeof err.message === \"object\") {\r\n          let dt = err.message[Object.keys(err.message)[0]];\r\n          AntdMsg(dt, \"error\");\r\n        } else {\r\n          AntdMsg(err.message, \"error\");\r\n        }\r\n      })\r\n      .finally(() => {\r\n        setAjxRequesting(false);\r\n      });\r\n  };\r\n\r\n  const getDetails = () => {\r\n    setAjxRequesting(true);\r\n    service\r\n      .details(data._id)\r\n      .then((res) => {\r\n        setData(res.data || {});\r\n      })\r\n      .catch((err) => {\r\n        AntdMsg(err.message, \"error\");\r\n      })\r\n      .finally(() => {\r\n        setAjxRequesting(false);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    if (data._id) {\r\n      getDetails();\r\n    }\r\n  }, [data._id]);\r\n  useEffect(() => {\r\n    if (!data._id) {\r\n      handleChange(util.removeSpecialChars(data.slug || \"\"), \"slug\");\r\n    }\r\n  }, [data.slug]);\r\n  useEffect(() => {\r\n    if (!open) {\r\n      setData({});\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title={(!data._id ? \"Add New\" : \"Edit\") + \" Product\"}\r\n        style={{ top: 20 }}\r\n        open={open}\r\n        okText=\"Save\"\r\n        onOk={save}\r\n        okButtonProps={{ disabled: ajxRequesting }}\r\n        onCancel={() => {\r\n          setOpen(false);\r\n        }}\r\n        destroyOnClose\r\n        maskClosable={false}\r\n        width={1000}\r\n        className=\"app-modal-body\"\r\n        footer={[\r\n          <Button\r\n            key=\"cancel\"\r\n            onClick={() => {\r\n              setOpen(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>,\r\n          <Button key=\"save\" type=\"primary\" onClick={save}>\r\n            Save\r\n          </Button>,\r\n        ]}\r\n      >\r\n        <Spin\r\n          spinning={ajxRequesting}\r\n          indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\r\n        >\r\n          <Form layout=\"vertical\">\r\n            <Row gutter={[12, 2]}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type\" required>\r\n                  <Select\r\n                    value={data.type}\r\n                    onChange={(e) => {\r\n                      handleChange(e, \"type\");\r\n                    }}\r\n                  >\r\n                    <Select.Option value=\"category\">Category</Select.Option>\r\n                    <Select.Option value=\"banner\">Banner</Select.Option>\r\n                    <Select.Option value=\"offer\">Offer</Select.Option>\r\n                    <Select.Option value=\"products\">Products</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              {data.type === \"products\" && (\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Choose Product\" required>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Choose Products\"\r\n                      onChange={(v) => {\r\n                        handleChange(v, \"productIds\");\r\n                      }}\r\n                      optionLabelProp=\"label\"\r\n                      allowClear={true}\r\n                      value={data.productIds}\r\n                      options={allProduct.filter((v) => {\r\n                        return true;\r\n                      })}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {data.type === \"banner\" && (\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Choose Banners\" required>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Choose Banners\"\r\n                      onChange={(v) => {\r\n                        handleChange(v, \"bannerIds\");\r\n                      }}\r\n                      optionLabelProp=\"label\"\r\n                      allowClear={true}\r\n                      value={data.bannerIds}\r\n                      options={allBanners.filter((v) => {\r\n                        return true;\r\n                      })}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {data.type === \"category\" && (\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Choose Categories\" required>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Choose Categories\"\r\n                      onChange={(v) => {\r\n                        handleChange(v, \"categoryIds\");\r\n                      }}\r\n                      optionLabelProp=\"label\"\r\n                      allowClear={true}\r\n                      value={data.categoryIds}\r\n                      options={allCategories.filter((v) => {\r\n                        return true;\r\n                      })}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              {data.type === \"offer\" && (\r\n                <Col span={24}>\r\n                  <Form.Item label=\"Choose Offers\" required>\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Choose Offers\"\r\n                      onChange={(v) => {\r\n                        handleChange(v, \"offerIds\");\r\n                      }}\r\n                      optionLabelProp=\"label\"\r\n                      allowClear={true}\r\n                      value={data.offerIds}\r\n                      options={allOffers.filter((v) => {\r\n                        return true;\r\n                      })}\r\n                    />\r\n                  </Form.Item>\r\n                </Col>\r\n              )}\r\n              <Col span={12}>\r\n                <Form.Item label=\"Title\">\r\n                  <Input\r\n                    placeholder=\"title\"\r\n                    value={data.title}\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, \"title\");\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Slug\" required>\r\n                  <Input\r\n                    placeholder=\"slug\"\r\n                    value={data.slug}\r\n                    onChange={(e) => {\r\n                      handleChange(\r\n                        util.removeSpecialChars(e.target.value),\r\n                        \"slug\"\r\n                      );\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Display Order\" required>\r\n                  <Input\r\n                    placeholder=\"1\"\r\n                    type=\"number\"\r\n                    value={data.displayOrder}\r\n                    onChange={(e) => {\r\n                      handleChange(e.target.value, \"displayOrder\");\r\n                    }}\r\n                  />\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Display Type\" required>\r\n                  <Select\r\n                    value={data.displayType}\r\n                    onChange={(e) => {\r\n                      handleChange(e, \"displayType\");\r\n                    }}\r\n                  >\r\n                    <Select.Option value=\"grid\">Grid</Select.Option>\r\n                    <Select.Option value=\"scroll\">Scroll</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Status\" required>\r\n                  <Select\r\n                    value={data.status}\r\n                    onChange={(e) => {\r\n                      handleChange(e, \"status\");\r\n                    }}\r\n                  >\r\n                    <Select.Option value={true}>Active</Select.Option>\r\n                    <Select.Option value={false}>Inactive</Select.Option>\r\n                  </Select>\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Spin>\r\n      </Modal>\r\n    </>\r\n  );\r\n});\r\n","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '';\r\n\r\n    static list(data) {\r\n        return axios.get(\"ecommerce/order/list\", { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(\"ecommerce/order/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post('ecommerce/order/delete', { ids: id });\r\n    }\r\n    static details(id) {\r\n        return axios.get('ecommerce/order/details/' + id);\r\n    }\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = '';\r\n\r\n    static list(data) {\r\n        return axios.get(\"ecommerce/order/orderDetail/list\", { params: data });\r\n    }\r\n    static details(id) {\r\n        return axios.get('ecommerce/order/orderDetail/detail/:_id' + id);\r\n    }\r\n}","import {\r\n    Table,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Popconfirm,\r\n    Modal,\r\n    Spin,\r\n} from \"antd\";\r\nimport {\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    LoadingOutlined,\r\n    EyeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n    useEffect,\r\n    useState,\r\n    forwardRef,\r\n    useImperativeHandle,\r\n    useRef,\r\n} from \"react\";\r\nimport service from \"../../services/orderDetail\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { AntdMsg } from \"../../utils/Antd\";\r\n\r\nexport default function OrderDetails({ type, orderId = null }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, orderId });\r\n    console.log(qData)\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Cat Id\",\r\n            dataIndex: \"productVariantDetails\",\r\n            width: 250,\r\n            render: (_) => _?.catId\r\n        },\r\n        {\r\n            title: \"Product Name\",\r\n            dataIndex: \"productDetails\",\r\n            width: 250,\r\n            render: (_) => {\r\n                return <span>{_?.name}</span>;\r\n            },\r\n        },\r\n        {\r\n            title: \"Price\",\r\n            dataIndex: \"productVariantDetails\",\r\n            width: 140,\r\n            render: (_) => {\r\n                return <span>₹{_?.price}</span>;\r\n            },\r\n        },\r\n        {\r\n            title: \"With Discount Price\",\r\n            dataIndex: \"productVariantDetails\",\r\n            width: 140,\r\n            render: (_) => {\r\n                return <span>₹{_?.withDiscountPrice || _?.price}</span>;\r\n            },\r\n        },\r\n        \r\n    ].filter((item) => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service\r\n            .list(qData)\r\n            .then((res) => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({\r\n                    ...qData,\r\n                    limit: res.extra.limit,\r\n                    page: res.extra.page,\r\n                    total: res.extra.total,\r\n                });\r\n            })\r\n            .catch((err) => { })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service\r\n            .orderDetailDelete(id)\r\n            .then((res) => {\r\n                AntdMsg(res.message);\r\n                list();\r\n                setSelected([]);\r\n            })\r\n            .catch((err) => {\r\n                AntdMsg(err.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: \"small\",\r\n        title: () => (\r\n            <Search\r\n                {...{ addNewModalRef, selected, deleteData, qData, setQData, list }}\r\n            />\r\n        ),\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n    return (\r\n        <>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n            // scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list, type, orderId }} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({\r\n    addNewModalRef,\r\n    selected,\r\n    deleteData,\r\n    qData,\r\n    setQData,\r\n    list,\r\n}) {\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                {/* <Col span={4}>\r\n                      <Form.Item style={{ marginBottom: 0 }}>\r\n                          <Input placeholder=\"Search by name\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\r\n                      </Form.Item>\r\n                  </Col> */}\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Reload\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {selected.length ? (\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete these selected product attributes ?\"\r\n                            onConfirm={() => {\r\n                                deleteData(selected);\r\n                            }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                danger\r\n                                style={{ float: \"right\" }}\r\n                                icon={<DeleteOutlined />}\r\n                            >\r\n                                Delete Selected\r\n                            </Button>\r\n                        </Popconfirm>\r\n                    ) : null}\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, orderId } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n    const [ln, setLn] = useState(\"en\");\r\n    const [changeForm, setChangeForm] = useState(false);\r\n\r\n    const handleChange = (value) => {\r\n        if (changeForm) {\r\n            Object.entries(value).forEach((ent) => {\r\n                let varDt = data;\r\n                const k = ent[0];\r\n                const v = ent[1];\r\n                let keys = k.split(\".\");\r\n                for (let i = 0; i < keys.length; i++) {\r\n                    if (i + 1 === keys.length) {\r\n                        varDt[keys[i]] = v;\r\n                    } else {\r\n                        if (typeof varDt[keys[i]] === \"undefined\") {\r\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                                varDt[keys[i]] = [];\r\n                            } else {\r\n                                varDt[keys[i]] = {};\r\n                            }\r\n                        }\r\n                        varDt = varDt[keys[i]];\r\n                    }\r\n                }\r\n            });\r\n            setData({ ...data });\r\n        }\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt ? { _id: dt } : { orderId });\r\n            setChangeForm(true);\r\n        },\r\n    }));\r\n\r\n    const getDetails = () => {\r\n        setAjxRequesting(true);\r\n        service\r\n            .orderDetailDetails(data._id)\r\n            .then((res) => {\r\n                setData(res.data || {});\r\n            })\r\n            .catch((err) => {\r\n                AntdMsg(err.message, \"error\");\r\n            })\r\n            .finally(() => {\r\n                setAjxRequesting(false);\r\n            });\r\n    };\r\n\r\n    const save = () => {\r\n        if (changeForm) {\r\n            setAjxRequesting(true);\r\n            service\r\n                .orderDetailSave(data, { ln })\r\n                .then((res) => {\r\n                    AntdMsg(res.message);\r\n                    handleChange({ ...res.data });\r\n                    if (ln === \"en\") {\r\n                        list();\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    if (typeof err.message === \"object\") {\r\n                        let dt = err.message[Object.keys(err.message)[0]];\r\n                        AntdMsg(dt, \"error\");\r\n                    } else {\r\n                        AntdMsg(err.message, \"error\");\r\n                    }\r\n                })\r\n                .finally(() => {\r\n                    setAjxRequesting(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (data._id) {\r\n            getDetails();\r\n        }\r\n    }, [ln, data._id]);\r\n\r\n    useEffect(() => {\r\n        if (!open) {\r\n            setData({ _id: null });\r\n        } else {\r\n            setLn(\"en\");\r\n        }\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? \"Add\" : \"Edit\") + \" Order\"}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => {\r\n                    setOpen(false);\r\n                }}\r\n                // destroyOnClose\r\n                maskClosable={false}\r\n                width={900}\r\n                className=\"app-modal-body-overflow\"\r\n                footer={[\r\n                    <Button\r\n                        key=\"cancel\"\r\n                        onClick={() => {\r\n                            setOpen(false);\r\n                        }}\r\n                    >\r\n                        Cancel\r\n                    </Button>,\r\n                    changeForm ? (\r\n                        <Button key=\"save\" type=\"primary\" onClick={save}>\r\n                            Save\r\n                        </Button>\r\n                    ) : null,\r\n                ]}\r\n            >\r\n                <Spin\r\n                    spinning={ajxRequesting}\r\n                    indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}\r\n                >\r\n                    <Form layout=\"vertical\" disabled={!changeForm}>\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Product Id\" required>\r\n                                    <Input placeholder=\"Value\" value={data?._id} disabled />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Product Name\" required>\r\n                                    <Input\r\n                                        placeholder=\"Value\"\r\n                                        value={data?.productId?.name}\r\n                                        disabled\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Price\" required>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Price\"\r\n                                        value={data.price}\r\n                                        onChange={(e) => {\r\n                                            handleChange({ price: e.target.value });\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Actual Price\" required>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Actual price\"\r\n                                        value={data.actualPrice}\r\n                                        disabled\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Quantity\" required>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Quantity\"\r\n                                        value={data.quantity}\r\n                                        onChange={(e) => {\r\n                                            handleChange({ quantity: e.target.value });\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item label=\"Total \" required>\r\n                                    <Input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Total\"\r\n                                        value={data.total}\r\n                                        onChange={(e) => {\r\n                                            handleChange({ total: e.target.value });\r\n                                        }}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});","\r\nimport {\r\n    Table,\r\n    Button,\r\n    Form,\r\n    Input,\r\n    Row,\r\n    Col,\r\n    Popconfirm,\r\n    Modal,\r\n    Spin,\r\n    Typography,\r\n    Select,\r\n    Tag,\r\n} from \"antd\";\r\nimport {\r\n    DeleteOutlined,\r\n    EditOutlined,\r\n    LoadingOutlined,\r\n    EyeOutlined,\r\n} from \"@ant-design/icons\";\r\nimport React, {\r\n    useEffect,\r\n    useState,\r\n    forwardRef,\r\n    useImperativeHandle,\r\n    useRef,\r\n} from \"react\";\r\nimport service from \"../../services/orders\";\r\nimport Pagination from \"../components/Pagination\";\r\nimport { AntdMsg } from \"../../utils/Antd\";\r\nimport OrderDetails from \"./OrderDetails\";\r\n\r\nexport default function Order({ type, categoryId = null }) {\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, type, categoryId });\r\n    const attributeModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: \"Order id\",\r\n            dataIndex: \"orderId\",\r\n            // width: 200,\r\n        },\r\n        {\r\n            title: \"Shipping Address\",\r\n            dataIndex: \"addressDetails\",\r\n            width: 250,\r\n            render: (_) => {\r\n                const data = JSON.parse(_);\r\n                return data==null ? <span>Not Mentioned</span> : <span>{data?.street1 + \" \" + data?.street2 + \" \" + data?.city + \" \" + data?.state + \" \" + data?.pin}</span>;\r\n            },\r\n        },\r\n        {\r\n            title: \"Total Amount\",\r\n            dataIndex: \"priceDetails\",\r\n            width: 140,\r\n            render: (_) => {\r\n                return <span>₹{_.finalPrice}</span>;\r\n            },\r\n        },\r\n        {\r\n            title: \"Details\",\r\n            dataIndex: \"orderId\",\r\n            width: 150,\r\n            render: (value, row) => (\r\n                \r\n                <Button\r\n                    type=\"primary\"\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        attributeModalRef.current.openForm({ orderId: row.orderId });\r\n                    }}\r\n                >\r\n                    Order Details\r\n                </Button>\r\n            ),\r\n        },\r\n        {\r\n            title: \"Status\",\r\n            dataIndex: \"status\",\r\n            width: 200,\r\n            render: (_, { status }) => {\r\n                return <Tag color=\"green\">{status}</Tag>;\r\n            },\r\n        },\r\n    ].filter((item) => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service\r\n            .list(qData)\r\n            .then((res) => {\r\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n                setQData({\r\n                    ...qData,\r\n                    limit: res.extra.limit,\r\n                    page: res.extra.page,\r\n                    total: res.extra.total,\r\n                });\r\n            })\r\n            .catch((err) => { })\r\n            .finally(() => {\r\n                setLoading(false);\r\n            });\r\n    }\r\n\r\n    const deleteData = (id) => {\r\n        service\r\n            .delete(id)\r\n            .then((res) => {\r\n                AntdMsg(res.message);\r\n                list();\r\n                setSelected([]);\r\n            })\r\n            .catch((err) => {\r\n                AntdMsg(err.message, \"error\");\r\n            });\r\n    };\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = \"right\";\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: \"small\",\r\n        title: () => (\r\n            <Search\r\n                {...{\r\n                    selected,\r\n                    deleteData,\r\n                    qData,\r\n                    setQData,\r\n                    list,\r\n                    categoryId,\r\n                }}\r\n            />\r\n        ),\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n    return (\r\n        <>\r\n            {!categoryId ? (\r\n                <Typography.Title level={5}>List of Orders</Typography.Title>\r\n            ) : null}\r\n\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: [\"none\"], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: \"calc(100vh - 340px)\", x: \"calc(100vw - 387px)\" }}\r\n            />\r\n            <AttributeModal ref={attributeModalRef} />\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Search({ selected, deleteData, qData, setQData, list }) {\r\n    const onChange = (v, key) => {\r\n\t\tqData[key] = v;\r\n\t\tif (v === undefined || v === \"\") {\r\n\t\t\tdelete qData[key];\r\n\t\t\tlist();\r\n\t\t}\r\n\t};\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col span={4}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input\r\n                            placeholder=\"Search by order id\"\r\n                            value={qData.key}\r\n                            onChange={e => onChange(e.target.value, \"key\")}\r\n                            allowClear\r\n                        />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Search\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    {selected.length ? (\r\n                        <Popconfirm\r\n                            title=\"Are you sure to delete these selected Order?\"\r\n                            onConfirm={() => {\r\n                                deleteData(selected);\r\n                            }}\r\n                            okText=\"Yes\"\r\n                            cancelText=\"No\"\r\n                        >\r\n                            <Button\r\n                                type=\"primary\"\r\n                                danger\r\n                                style={{ float: \"right\" }}\r\n                                icon={<DeleteOutlined />}\r\n                            >\r\n                                Delete Selected\r\n                            </Button>\r\n                        </Popconfirm>\r\n                    ) : null}\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nconst AttributeModal = forwardRef((props, ref) => {\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(dt);\r\n        },\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={\r\n                    <>\r\n                        Details of Order:{\" \"}\r\n                        <Typography.Text type=\"danger\">{data.orderId}</Typography.Text>\r\n                    </>\r\n                }\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onCancel={() => {\r\n                    setOpen(false);\r\n                }}\r\n                maskClosable={false}\r\n                width={1200}\r\n                destroyOnClose\r\n                className=\"app-modal-body-overflow\"\r\n                footer={null}\r\n            >\r\n                <OrderDetails {...{ type: data.type, orderId: data.orderId }} />\r\n            </Modal>\r\n        </>\r\n    );\r\n});","import { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, DatePicker, message } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport service from '../../../services/specialization';\r\nimport Pagination from '../../components/Pagination';\r\n\r\n\r\nexport default function List({ type }) {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const addNewModalRef = useRef();\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 30,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'name',\r\n            dataIndex: 'name',\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete this specialization?\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        service.typeList({...qData, type}).then(res => {\r\n            setData(res.data?.map((v) => ({ key: v._id, ...v })).reverse());\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n\r\n    const deleteData = (id) => {\r\n        service.typeDelete(id).then(res => {\r\n            message.success(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            message.error(err.message);\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit, type]);\r\n\r\n    return (\r\n        <>\r\n            <div style={{ padding: \"0px 10px\", border1: '1px solid black' }}>\r\n                <Typography.Title level={5} style={{ marginTop: 0 }}></Typography.Title>\r\n                <Table\r\n                    {...tableProps}\r\n                    pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                    columns={tableColumns}\r\n                    dataSource={data.length ? data : []}\r\n                    scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n                />\r\n                <AddForm ref={addNewModalRef} {...{ list, type }} />\r\n            </div>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\r\n    const onChange = (v, key) => {\r\n\t\tqData[key] = v;\r\n\t\tif (v === undefined || v === \"\") {\r\n\t\t\tdelete qData[key];\r\n\t\t\tlist();\r\n\t\t}\r\n\t};\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col xs={24} xl={4}>\r\n                <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by name\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list, type } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const handleChange = (value) => { setData({ ...data, ...value }); }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? { ...dt }\r\n                    : {}\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        service.typeSave({ ...data, type }).then((res) => {\r\n            message.success(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                message.error(dt);\r\n            } else {\r\n                message.error(err.message);\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Specialization '}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                className=\"app-modal-body\"\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Title\" required>\r\n                                    <Input placeholder=\"Title\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\n","import { Tabs } from 'antd';\r\nimport { useState } from 'react';\r\nimport List from './List';\r\n\r\nexport default function Type() {\r\n    const [type, setType] = useState('ocassion');\r\n    return (\r\n        <Tabs\r\n            onChange={(v) => { setType(v) }}\r\n            activeKey={type}\r\n            items={[\r\n                {\r\n                    label: \"Occasion\",\r\n                    key: 'ocassion',\r\n                    children: <List type={type} />,\r\n                },\r\n                {\r\n\r\n                    label: \"Recipient\",\r\n                    key: 'recipient',\r\n                    children: <List type={type} />\r\n                },\r\n                {\r\n\r\n                    label: \"Flavour\",\r\n                    key: \"flavour\",\r\n                    children: <List type={type} />\r\n                },\r\n                {\r\n\r\n                    label: \"Relation\",\r\n                    key: \"relation\",\r\n                    children: <List type={type} />\r\n                }\r\n            ]}\r\n        />\r\n    )\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'delivery';\r\n\r\n    // for deliveryType : \r\n    static deliveryTypeDetails(id, data) {\r\n        return axios.get(this.baseURL + '/delivery-type/details/' + id, { params: data });\r\n    }\r\n    static deliveryTypeList(data) {\r\n        return axios.get(this.baseURL + '/delivery-type/list', { params: data });\r\n    }\r\n    static deliveryTypeSave(data, query) {\r\n        return axios.post(this.baseURL + \"/delivery-type/save\", data, { params: query });\r\n    }\r\n    static deliveryTypeDelete(id) {\r\n        return axios.post(this.baseURL + '/delivery-type/delete', { ids: id });\r\n    }\r\n    \r\n    // for delivery :\r\n    static deliveryDetails(id, data) {\r\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\r\n    }\r\n    static deliveryList(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static deliverySave(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static deliveryDelete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag, TimePicker, Divider } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\r\nimport moment from \"moment\";\r\nimport dayjs from 'dayjs';\r\nimport deliveryService from '../../services/delivery';\r\nimport Pagination from '../components/Pagination';\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport util from '../../utils/util';\r\n\r\n\r\nexport default function Delivery() {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [selected, setSelected] = useState([]);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\r\n    const addNewModalRef = useRef();\r\n\r\n    const columns = [\r\n        {\r\n            title: '#',\r\n            width: 20,\r\n            render: (v, row, i) => <b>{i + 1}</b>\r\n        },\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'Charge',\r\n            dataIndex: 'charge',\r\n            width: 80,\r\n        },\r\n        {\r\n            title: 'Status',\r\n            dataIndex: 'status',\r\n            width: 80,\r\n            render: isActive => {\r\n                if (isActive) {\r\n                    return <Tag color='green'>Active</Tag>\r\n                } else {\r\n                    return <Tag color='red'>Inactive</Tag>\r\n                }\r\n            },\r\n        },\r\n        {\r\n            title: 'Action',\r\n            dataIndex: '_id',\r\n            width: 70,\r\n            render: (v, row) => {\r\n                return <>\r\n                    <Popconfirm\r\n                        title=\"Are you sure to delete?. Be sure to delete the data from server.\"\r\n                        onConfirm={() => { deleteData(row._id); }}\r\n                        okText=\"Yes\"\r\n                        cancelText=\"No\"\r\n                    >\r\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\r\n                    </Popconfirm>\r\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row) }} />\r\n                </>\r\n            }\r\n        },\r\n    ].filter(item => !item.hidden);\r\n\r\n    function list() {\r\n        setLoading(true);\r\n        deliveryService.deliveryList(qData).then(res => {\r\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\r\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\r\n        }).catch(err => { }).finally(() => {\r\n            setLoading(false);\r\n        });\r\n    }\r\n\r\n\r\n    const deleteData = (id) => {\r\n        deliveryService.deliveryDelete(id).then(res => {\r\n            AntdMsg(res.message);\r\n            list();\r\n            setSelected([]);\r\n        }).catch(err => {\r\n            AntdMsg(err.message, 'error');\r\n        })\r\n    }\r\n\r\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\r\n\r\n    tableColumns[0].fixed = true;\r\n    tableColumns[tableColumns.length - 1].fixed = 'right';\r\n\r\n    const tableProps = {\r\n        bordered: true,\r\n        loading,\r\n        size: 'small',\r\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\r\n        showHeader: true,\r\n        footer: () => <Pagination {...{ qData, setQData }} />,\r\n        rowSelection: {\r\n            onChange: (selectedRowKeys) => {\r\n                setSelected(selectedRowKeys);\r\n            },\r\n        },\r\n        tableLayout: undefined,\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        list();\r\n    }, [qData.page, qData.limit]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography.Title level={5}>List of Delivery</Typography.Title>\r\n            <Table\r\n                {...tableProps}\r\n                pagination={{ position: ['none'], pageSize: qData.limit }}\r\n                columns={tableColumns}\r\n                dataSource={data.length ? data : []}\r\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\r\n            />\r\n            <AddForm ref={addNewModalRef} {...{ list }} />\r\n        </>\r\n    );\r\n};\r\n\r\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\r\n    const onChange = (v, key) => {\r\n\t\tqData[key] = v;\r\n\t\tif (v === undefined || v === \"\") {\r\n\t\t\tdelete qData[key];\r\n\t\t\tlist();\r\n\t\t}\r\n\t};\r\n    return (\r\n        <Form onSubmitCapture={list} className=\"search-form\">\r\n            <Row gutter={[12, 2]}>\r\n                <Col\r\n                    xs={{ span: 24 }}\r\n                    sm={{ span: 16 }}\r\n                    md={{ span: 10 }}\r\n                    lg={{ span: 4 }}\r\n                >\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Input placeholder=\"Search by title\" value={qData.key} onChange={e => onChange(e.target.value, \"key\")} allowClear />\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={3}>\r\n                    <Form.Item style={{ marginBottom: 0 }}>\r\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\r\n                    </Form.Item>\r\n                </Col>\r\n                <Col span={5}>\r\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\r\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\r\n                    </Form.Item>\r\n                    {\r\n                        selected.length\r\n                            ? <Popconfirm\r\n                                title=\"Are you sure to delete?. Be sure to delete the data from server.\"\r\n                                onConfirm={() => { deleteData(selected); }}\r\n                                okText=\"Yes\"\r\n                                cancelText=\"No\"\r\n                            >\r\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\r\n                            </Popconfirm>\r\n                            : null\r\n                    }\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n};\r\n\r\nconst AddForm = forwardRef((props, ref) => {\r\n    const { list } = props;\r\n    const [open, setOpen] = useState(false);\r\n    const [data, setData] = useState({ aspect: 1 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n\r\n    const handleChange = (value) => {\r\n        Object.entries(value).forEach(ent => {\r\n            let varDt = data;\r\n            const k = ent[0];\r\n            const v = ent[1];\r\n            let keys = k.split('.');\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (i + 1 === keys.length) {\r\n                    varDt[keys[i]] = v;\r\n                } else {\r\n                    if (typeof varDt[keys[i]] === 'undefined') {\r\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\r\n                            varDt[keys[i]] = [];\r\n                        } else {\r\n                            varDt[keys[i]] = {};\r\n                        }\r\n                    } varDt = varDt[keys[i]];\r\n                }\r\n            }\r\n        });\r\n        setData({ ...data });\r\n    }\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        openForm(dt) {\r\n            setOpen(true);\r\n            setData(\r\n                dt\r\n                    ? {...dt }\r\n                    : { status: true, timings: [{startTime:\"00:00:00\",endTime:\"00:00:00\"}] }\r\n            );\r\n        }\r\n    }));\r\n\r\n    const save = () => {\r\n        setAjxRequesting(true);\r\n        deliveryService.deliverySave(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            handleChange({ ...res.data });\r\n            list();\r\n            setOpen(false);\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                title={(!data._id ? 'Add' : 'Edit') + ' Delivery'}\r\n                style={{ top: 20 }}\r\n                open={open}\r\n                okText=\"Save\"\r\n                onOk={save}\r\n                okButtonProps={{ disabled: ajxRequesting }}\r\n                onCancel={() => { setOpen(false); }}\r\n                destroyOnClose\r\n                maskClosable={false}\r\n                width={500}\r\n                footer={[\r\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\r\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\r\n                ]}\r\n            >\r\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n                    <Form layout=\"vertical\">\r\n                        <Row gutter={[12, 2]}>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Name\" required>\r\n                                    <Input placeholder=\"Name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Charge\" required>\r\n                                    <Input placeholder=\"Charge\" value={data.charge} onChange={e => { handleChange({ charge: e.target.value }) }} />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Timing {...{ timingDetails: data.timings, parentKay: 'timings', handleChange }} />\r\n\r\n                            </Col>\r\n                            <Col span={24}>\r\n                                <Form.Item label=\"Status\" required>\r\n                                    <Select value={data.status} onChange={v => { handleChange({ status: v }) }} >\r\n                                        <Select.Option value={true}>Active</Select.Option>\r\n                                        <Select.Option value={false}>Inactive</Select.Option>\r\n                                    </Select>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </Spin>\r\n            </Modal>\r\n        </>\r\n    );\r\n});\r\n\r\nfunction Timing({ timingDetails: data, parentKay, handleChange }) {\r\n    useEffect(() => {\r\n        console.log(parentKay, parentKay === 'timings');\r\n    }, [parentKay])\r\n    return (\r\n        <>\r\n            <Table\r\n                {...{\r\n                    bordered: true,\r\n                    size: 'small',\r\n                    showHeader: true,\r\n                    footer: null,\r\n                    tableLayout: undefined,\r\n                }}\r\n                pagination={{ position: ['none'] }}\r\n                columns={\r\n                    [\r\n                        {\r\n                            title: 'Start Time',\r\n                            dataIndex: 'startTime',\r\n                            // width: 150,\r\n                            render: (row, v, i) =>  <TimePicker  onChange={(e,timeString) => { handleChange({ [`${parentKay}.${i}.startTime`]: timeString }) }}  value={dayjs(v?.startTime, 'HH:mm:ss')} />\r\n                        },\r\n                        {\r\n                            title: 'End Time',\r\n                            dataIndex: 'endTime',\r\n                            // width: 150,\r\n                            render: (row, v, i) =><TimePicker  onChange={(e,timeString) => {  handleChange({ [`${parentKay}.${i}.endTime`]: timeString }) }} value={dayjs(v?.endTime , 'HH:mm:ss')}/>\r\n                        },\r\n                        {\r\n                            title: 'Action',\r\n                            dataIndex: 'price',\r\n                            width: 100,\r\n                            render: (v, row, i) => {\r\n                                return <>\r\n                                    {\r\n                                        i + 1 === data.length\r\n                                            ? <Button icon={<PlusOutlined />} shape=\"circle\" type=\"dashed\" onClick={() => {\r\n                                                handleChange({ [parentKay]: [...data, {startTime:\"00:00:00\",endTime:\"00:00:00\"}] });\r\n                                            }} />\r\n                                            : null\r\n                                    }\r\n                                    {\r\n                                        i + 1 === data.length && i !== 0\r\n                                            ? <Button icon={<CloseOutlined />} shape=\"circle\" type=\"dashed\" className=\"mx-2\" danger onClick={() => {\r\n                                                data.pop();\r\n                                                handleChange([...data], parentKay);\r\n                                            }} />\r\n                                            : null\r\n                                    }\r\n                                </>\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n                dataSource={data?.length ? data : []}\r\n            />\r\n        </>\r\n    );\r\n}","import { Tabs } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport categoryService from '../../../services/category';\r\nimport Product from './Product';\r\n\r\n\r\nexport default function Index() {\r\n    const [type, setType] = useState();\r\n    const [categories, setCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        categoryService.list().then(res => {\r\n            setCategories(res.data || []);\r\n            setType(res.data[0]?._id)\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Tabs\r\n                onChange={(v) => { setType(v) }}\r\n                activeKey={type}\r\n                destroyInactiveTabPane={true}\r\n                items={\r\n                    categories.map(v => ({\r\n                        label: v.name,\r\n                        key: v._id,\r\n                        productSpecialization: v.specialization,\r\n                        children: <Product {...{ productSpecialization: v.specialization, categoryId: v._id }} />\r\n                    }))\r\n                }\r\n            />\r\n        </>\r\n    )\r\n}","import axios from \"../utils/axios\";\r\n\r\nexport default class service {\r\n\r\n    static baseURL = 'settings';\r\n\r\n    static list(data) {\r\n        return axios.get(this.baseURL + '/list', { params: data });\r\n    }\r\n    static save(data, query) {\r\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\r\n    }\r\n    static delete(id) {\r\n        return axios.post(this.baseURL + '/delete', { ids: id });\r\n    }\r\n}\r\n","import { Button, Card, Col, Input, Row, Spin } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport service from \"../../services/settings\"\r\nimport { AntdMsg } from '../../utils/Antd';\r\nimport { LoadingOutlined } from '@ant-design/icons';\r\nconst initDataMap = [\r\n    {\r\n        type: 'gst',\r\n        title: 'GST Percent',\r\n        dataInput: 'input',\r\n        default: '0',\r\n        iseditable: false\r\n    },\r\n    {\r\n        type: 'referralAmount',\r\n        title: 'Referral Amount',\r\n        dataInput: 'input',\r\n        default: '0',\r\n        iseditable: false\r\n    },\r\n    {\r\n        type: 'phone',\r\n        title: 'Phone Number(Support)',\r\n        dataInput: 'input',\r\n        default: 'xxxxxxxxxx',\r\n        iseditable: false\r\n    },\r\n    {\r\n        type: 'email',\r\n        title: 'email (Support)',\r\n        dataInput: 'input',\r\n        default: 'xxx....@test.com',\r\n        iseditable: false\r\n    },\r\n    {\r\n        type: 'whatsapp',\r\n        title: 'Whatsapp (Support)',\r\n        dataInput: 'input',\r\n        default: 'xxxxxxxxxx',\r\n        iseditable: false\r\n    }\r\n];\r\nconst Settings = () => {\r\n    const [data, setData] = useState(initDataMap.map(v => ({ type: v.type })));\r\n    const [dataMap, setDataMap] = useState(initDataMap);\r\n    const [qData, setQData] = useState({ page: 1, limit: 20 });\r\n    const [ajxRequesting, setAjxRequesting] = useState(false);\r\n\r\n    const list = () => {\r\n        setAjxRequesting(true);\r\n        service.list(qData).then((res) => {\r\n            setData(\r\n                initDataMap?.map(v =>\r\n                    res?.data?.find(vv => vv.type === v.type) || { type: v.type, value: v.default }\r\n                )\r\n            )\r\n        }).catch(err => { }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n    useEffect(() => {\r\n        list()\r\n    }, [])\r\n\r\n    const handleSave = (data) => {\r\n        setAjxRequesting(true);\r\n        service.save(data).then((res) => {\r\n            AntdMsg(res.message);\r\n            setDataMap(dataMap.map((vv, ii) => (data.type !== vv.type ? { ...vv } : { ...vv, iseditable: false })))\r\n            list();\r\n        }).catch(err => {\r\n            if (typeof err.message === 'object') {\r\n                let dt = err.message[Object.keys(err.message)[0]];\r\n                AntdMsg(dt, 'error');\r\n            } else {\r\n                AntdMsg(err.message, 'error');\r\n            }\r\n        }).finally(() => {\r\n            setAjxRequesting(false);\r\n        });\r\n    }\r\n\r\n    return <>\r\n        <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\r\n            <Row gutter={[12, 12]}>\r\n                {\r\n                    dataMap?.map((val, i) => (\r\n                        <Col span={6} key={i}>\r\n                            <Card\r\n                                title={val.title}\r\n                                size=\"small\"\r\n                                extra={\r\n                                    !val.iseditable ?\r\n                                        <Button type=\"primary\" size=\"small\" onClick={() => setDataMap(dataMap.map((vv, ii) => (i !== ii ? { ...vv } : { ...vv, iseditable: true })))} > Edit </Button> :\r\n                                        <Row gutter={6}>\r\n                                            <Col>\r\n                                                <Button type=\"primary\" size=\"small\" danger onClick={() => setDataMap(dataMap.map((vv, ii) => (i !== ii ? { ...vv } : { ...vv, iseditable: false })))}> Cancel </Button>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button type=\"primary\" size=\"small\" onClick={() => {\r\n                                                    handleSave(data?.find((vv, ii) => vv.type === val.type))\r\n                                                }} > Save </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                }\r\n                            >\r\n                                {\r\n                                    val.dataInput === 'input'\r\n                                        ? <Input value={(data?.find((vv, ii) => vv.type === val.type))?.value} onChange={e => {\r\n                                            setData(data.map((vv, ii) => (vv.type === val.type ? { ...vv, value: e.target.value } : { ...vv })))\r\n                                        }} disabled={!val.iseditable} />\r\n                                        : null\r\n                                }\r\n                            </Card>\r\n                        </Col>\r\n                    ))\r\n                }\r\n            </Row>\r\n        </Spin>\r\n    </>\r\n};\r\nexport default Settings;","import React from \"react\";\r\nimport { Card, Layout, Menu } from \"antd\";\r\nimport { Routes, Route, Link } from \"react-router-dom\";\r\nimport Error404 from \"../pages/errors/Error404\";\r\nimport commonObj from \"../../commonObj\";\r\n\r\nimport Coupon from \"../pages/Coupon\";\r\n\r\nimport Application from \"../pages/Application\"\r\nimport Category from \"../pages/Category\";\r\nimport Banner from \"../pages/Banner\";\r\nimport Varient from \"../pages/Product/Varient\";\r\n// import Product from \"../pages/Product/Varient\";\r\nimport UserManagement from \"../pages/Management/userManagement\";\r\nimport Product from \"../pages/Product/Product\";\r\nimport Offer from \"../pages/Offer\";\r\nimport AddOn from \"../pages/Product/AddOn\";\r\nimport HomePageItems from \"../pages/HomePageItems\";\r\nimport Order from \"../pages/Order\";\r\nimport Type from \"../pages/Specialization/Type\";\r\nimport Delivery from \"../pages/delivery\";\r\nimport Products from \"../pages/Product\";\r\nimport Settings from \"../pages/Settings\";\r\n\r\n\r\nexport default function MyLayout() {\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh', }}>\r\n                <Layout className=\"site-layout\" >\r\n                    <Layout.Header style={{ padding: 0, height: 'auto' }} >\r\n                        <Menu theme=\"dark\" mode=\"horizontal\" items={[\r\n                            {\r\n                                label: <Link to={'/specialization'}>Specialization  </Link>,\r\n                                key: \"specialization\",\r\n                            },\r\n                            {\r\n\r\n                                label: <Link to={'/offer'}>Offers  </Link>,\r\n                                key: \"offer\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/coupon'}>Coupon</Link>,\r\n                                key: \"coupon\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/banner'}>Banner</Link>,\r\n                                key: \"banner\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/order'}>Order</Link>,\r\n                                key: \"order\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/addOn'}>AddOn</Link>,\r\n                                key: \"addOn\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/category'}>Category</Link>,\r\n                                key: \"category\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/application'}>Application</Link>,\r\n                                key: \"application\"\r\n                            },\r\n\r\n                            {\r\n                                label: <Link to={'/delivery'}>Delivery</Link>,\r\n                                key: \"delivery\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/settings'}>Settings</Link>,\r\n                                key: \"settings\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/products'}>Products</Link>,\r\n                                key: 'products',\r\n                            },\r\n                            {\r\n                                label: <Link to={'/homepageitems'}>Home Page Items</Link>,\r\n                                key: \"homePageItems\"\r\n                            },\r\n                            {\r\n                                label: <Link to={'/management'}>User Management</Link>,\r\n                                key: \"management\"\r\n                            },\r\n                            {\r\n                                label: commonObj?.name ? commonObj.name : 'You',\r\n                                key: 'profile',\r\n                                children: [\r\n                                    {\r\n                                        key: 'Profile',\r\n                                        label: 'Profile',\r\n                                    },\r\n                                    {\r\n                                        key: 'Logout',\r\n                                        danger: true,\r\n                                        label: 'Logout',\r\n                                        onClick: () => { window.localStorage.clear(); window.location.reload(); }\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]}>\r\n                        </Menu>\r\n                    </Layout.Header>\r\n\r\n                    <Layout.Content>\r\n                        <Card style={{ borderRadius: \"none\" }}>\r\n                            <Routes>\r\n                                <Route path=\"specialization\" element={<Type />} >    </Route>\r\n                                <Route path=\"offer\" element={<Offer />}>  </Route>\r\n                                <Route path=\"coupon\" element={<Coupon />}> </Route>\r\n                                <Route path=\"banner\" element={<Banner />} />\r\n                                <Route path=\"application\" element={<Application />} />\r\n                                <Route path=\"category\" element={<Category />} />\r\n                                <Route path=\"management\" element={<UserManagement />} />\r\n                                <Route path=\"homepageitems\" element={<HomePageItems />} />\r\n                                <Route path=\"add-new-product\" element={<Product />} />\r\n                                <Route path=\"addOn\" element={<AddOn />} />\r\n                                <Route path=\"order\" element={<Order />} />\r\n                                <Route path=\"products\" element={<Products />} />\r\n                                <Route path=\"delivery\" element={<Delivery />} />\r\n                                <Route path=\"settings\" element={<Settings />} />\r\n                                <Route path={'*'} element={<Error404 />} />\r\n                            </Routes>\r\n                        </Card>\r\n                    </Layout.Content>\r\n                </Layout>\r\n            </Layout>\r\n        </>\r\n    );\r\n\r\n}"],"names":["Error404","status","title","subTitle","extra","to","type","service","data","axios","params","query","id","ids","baseURL","this","MyPagination","props","qData","setQData","total","showTotal","start","page","limit","end","pageSize","current","onChange","pp","showSizeChanger","AntdMsg","$msg","$type","message","Coupon","useState","setData","loading","setLoading","selected","setSelected","user","setUser","addNewModalRef","useRef","columns","width","render","v","row","i","dataIndex","map","vv","name","_id","moment","format","discountType","isActive","color","onConfirm","deleteData","okText","cancelText","size","danger","icon","DeleteOutlined","EditOutlined","onClick","openForm","filter","item","hidden","list","then","res","key","reverse","catch","err","finally","tableColumns","ellipsis","console","log","fixed","length","tableProps","bordered","Search","showHeader","footer","rowSelection","selectedRowKeys","tableLayout","undefined","useEffect","UserService","level","style","marginTop","pagination","position","dataSource","scroll","y","x","AddForm","ref","onSubmitCapture","className","gutter","xs","xl","marginBottom","placeholder","value","e","target","allowClear","span","htmlType","float","forwardRef","open","setOpen","aspect","ajxRequesting","setAjxRequesting","setFileList","handleChange","Object","entries","forEach","ent","varDt","k","keys","split","parseInt","useImperativeHandle","dt","fileType","save","details","avatar","code","util","toUpperCase","top","onOk","okButtonProps","disabled","onCancel","destroyOnClose","maskClosable","spinning","indicator","LoadingOutlined","fontSize","spin","layout","label","required","discountValue","maxDiscountValue","minimunOrderPrice","typeOfUse","mode","userIds","options","padding","margin","phone","expiryDate","dayjs","disabledDate","isBefore","Date","subtract","forFirst","defaultValue","TinyMce","height","menubar","plugins","toolbar","content_style","initialValue","editorRef","onInit","evt","editor","init","file_browser_callback_types","file_picker_callback","cb","meta","input","document","createElement","setAttribute","onchange","file","files","reader","FileReader","readAsDataURL","onload","result","click","deprecation_warnings","onSelectionChange","getContent","Application","currentTab","setCurrentTab","changeForm","getDetails","activeKey","items","children","borderTop","Aboutus","TandC","FAQ","PrivacyPolicy","display","flexDirection","paddingTop","paddingRight","url","config","fileList","count","cropImage","listType","uploadImage","onSuccess","onError","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","append","fileService","uid","handleOnChange","fl","handleRemove","shape","quality","rotate","accept","customRequest","onRemove","UploadOutlined","Category","parentId","addSubNewModalRef","src","isDeletable","NewForm","sm","md","lg","isTop","img","slug","specialization","Banner","image","Varient","productId","addNewLabelRef","AddLabel","cateId","price","kg","Address","userId","city","pin","state","street1","street2","Cart","WalletHistory","amount","UserManagement","ModelModalRef","ModelModalCartRef","ModelModalWalletRef","ModelModal","ModelModal1","ModelModal2","email","Product","productSpecialization","categoryId","category","setCategory","specializations","setSpecializations","expandable","categoryService","isAll","specializationService","thumbFile","setThumbFile","setFile","ocassion","flavour","recipient","relation","specializationIds","isPremium","isBestSelling","forBirthday","forAnniversary","isBestSellingCombos","variants","categoryIds","thumbImg","imgs","ii","Variant","variantDetails","parentKay","description","heighlight","metaTitle","metaTag","rows","metaDescription","isPopular","Fragment","orientation","CloseOutlined","pop","Offer","product","setProduct","endDate","ProductService","discountPercent","productIds","startDate","AddOn","weight","actualPrice","allProduct","setAllProduct","allCategories","setAllCategories","allOffers","setAllOffers","allBanners","setAllBanners","imgUrl","serviceProduct","offerService","bannerService","optionLabelProp","bannerIds","offerIds","displayOrder","displayType","OrderDetails","orderId","_","catId","withDiscountPrice","ln","setLn","setChangeForm","quantity","Order","attributeModalRef","JSON","parse","finalPrice","AttributeModal","List","border1","Type","setType","Delivery","deliveryService","timings","startTime","endTime","charge","Timing","timingDetails","timeString","Index","categories","setCategories","destroyInactiveTabPane","initDataMap","dataInput","default","iseditable","dataMap","setDataMap","find","val","handleSave","MyLayout","minHeight","theme","commonObj","window","localStorage","clear","location","reload","borderRadius","path","element"],"sourceRoot":""}